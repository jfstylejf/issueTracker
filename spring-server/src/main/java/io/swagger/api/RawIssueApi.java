/**
 * NOTE: This class is auto generated by the swagger code generator program (2.4.2).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.InlineResponse2002;
import io.swagger.model.RawIssueList;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-03-04T08:22:59.607Z")

@Api(value = "raw-issue", description = "the raw-issue API")
public interface RawIssueApi {

    @ApiOperation(value = "get LocationList by raw_issue_id", nickname = "getLocationList", notes = "", response = InlineResponse2002.class, tags={ "issue-service", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = InlineResponse2002.class),
        @ApiResponse(code = 401, message = "failed operation") })
    @RequestMapping(value = "/raw-issue/code",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<InlineResponse2002> getLocationList(@NotNull @ApiParam(value = " ", required = true) @Valid @RequestParam(value = "project_id", required = true) String projectId,@NotNull @ApiParam(value = " ", required = true) @Valid @RequestParam(value = "commit_id", required = true) String commitId,@NotNull @ApiParam(value = " ", required = true) @Valid @RequestParam(value = "file_path", required = true) String filePath);


    @ApiOperation(value = "get RawIssueList by issue_id", nickname = "getRawIssueList", notes = "", response = RawIssueList.class, tags={ "issue-service", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = RawIssueList.class),
        @ApiResponse(code = 401, message = "failed operation") })
    @RequestMapping(value = "/raw-issue",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<RawIssueList> getRawIssueList(@NotNull @ApiParam(value = " ", required = true) @Valid @RequestParam(value = "issue_id", required = true) String issueId);

}
