openapi: 3.0.0
info:
  description: ""
  version: "1.0.0"
  title: "issueTracker"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "pyu17@fudan.edu.cn"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

servers:
- url: http://10.141.221.85:8000
  description: 接口测试地址


tags:
- name: "tag 接口"


paths:
  /tags/default:
    get:
      tags:
      - "tag 接口"
      summary: "获取所有tag列表"
      operationId: "getAllDefaultTags"
      parameters:
      - in: "header"
        name: "token"
        description: "用户token"
        required: true
        schema:
          type: "string"
      - in: "query"
        name: "scope"
        description: "目前只有两个值--status与priority"
        required: true
        schema:
          type: "string"
      responses:
        '200':
          description: "successful operation"
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TagList'
            application/json:
              schema:
                $ref: '#/components/schemas/TagList'
        400:
          description: "failed"

  /tags/scope:
    get:
      tags:
      - "tag 接口"
      summary: "根据scope获取tag列表"
      operationId: "getTagsByScope"
      parameters:
      - in: "header"
        name: "token"
        description: "用户token"
        required: true
        schema:
          type: "string"
      responses:
        '200':
          description: "successful operation"
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TagList'
            application/json:
              schema:
                $ref: '#/components/schemas/TagList'
        400:
          description: "failed"


  /tags:
    post:
      tags:
      - "tag 接口"
      summary: "绑定tag"
      description: ""
      operationId: "addTag"
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TagInfo'
      parameters:
      - in: "header"
        name: "token"
        description: "用户token"
        required: true
        schema:
          type: "string"
      responses:
        '200':
          description: "successful operation"
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TagResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponse'
        '401':
          description: "failed"
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TagResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponse'

    put:
      tags:
      - "tag 接口"
      summary: "修改tag"
      description: ""
      operationId: "modifyTag"
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ModifyTagInfo'
      parameters:
      - in: "header"
        name: "token"
        description: "用户token"
        required: true
        schema:
          type: "string"
      responses:
        '200':
          description: "successful operation"
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TagResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponse'
        '401':
          description: "failed"
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TagResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponse'

  /tags/{tag-id}:
    delete:
      tags:
      - "tag 接口"
      summary: "删除相应绑定的tag记录"
      operationId: "deleteTag"
      parameters:
      - in: "path"
        name: "tag-id"
        description: ""
        required: true
        schema:
          type: "string"
      - in: "query"
        name: "item-id"
        description: ""
        required: true
        schema:
          type: "string"
      - in: "header"
        name: "token"
        description: "用户token"
        required: true
        schema:
          type: "string"
      responses:
        '200':
          description: "successful operation"
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TagResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponse'
        '401':
          description: "failed"
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TagResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponse'

  /tags/ignore:
    post:
      tags:
      - "tag 接口"
      summary: "ignore 某个缺陷类型"
      description: ""
      operationId: "ignoreOneType"
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/IgnoreTagInfo'
      parameters:
      - in: "header"
        name: "token"
        description: "用户token"
        required: true
        schema:
          type: "string"
      responses:
        '200':
          description: "successful operation"
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TagResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponse'
        '401':
          description: "failed"
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TagResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponse'

    delete:
      tags:
      - "tag 接口"
      summary: "删除相应的 ignore记录"
      operationId: "cancelIgnoreRecord"
      parameters:
      - in: "query"
        name: "repo-id"
        description: ""
        required: true
        schema:
          type: "string"
      - in: "query"
        name: "level"
        description: ""
        required: true
        schema:
          type: "string"
      - in: "query"
        name: "type"
        description: ""
        required: true
        schema:
          type: "string"
      - in: "header"
        name: "token"
        description: "用户token"
        required: true
        schema:
          type: "string"
      responses:
        '200':
          description: "successful operation"
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TagResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponse'
        '401':
          description: "failed"
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/TagResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/TagResponse'

    get:
      tags:
      - "tag 接口"
      summary: "获取所有已ignore类型的列表"
      operationId: "getIgnoreRecordList"
      parameters:
      - in: "header"
        name: "token"
        description: "用户token"
        required: true
        schema:
          type: "string"
      responses:
        '200':
          description: "successful operation"
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IgnoreRecordList'
            application/json:
              schema:
                $ref: '#/components/schemas/IgnoreRecordList'
        400:
          description: "failed"

  /tags/isSolved:
    get:
      tags:
      - "tag 接口"
      summary: "判断issue是否已solved"
      operationId: "isSolved"
      parameters:
      - in: "query"
        name: "issueId"
        description: ""
        required: true
        schema:
          type: "string"
      - in: "header"
        name: "token"
        description: "用户token"
        required: true
        schema:
          type: "string"
      responses:
        '200':
          description: "successful operation"
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/IsSolvedTagResponse'
            application/json:
              schema:
                $ref: '#/components/schemas/IsSolvedTagResponse'
        400:
          description: "failed"

components:
  schemas:
    Tag:
      type: "object"
      properties:
        uuid:
          type: "string"
        name:
          type: "string"
        scope:
          type: "string"
        color:
          type: "string"
        icon:
          type: "string"

    TagList:
      type: "array"
      items:
        $ref: '#/components/schemas/Tag'



    TagInfo:
      type: "object"
      properties:
        name:
          type: "string"
        scope:
          type: "string"
        itemId:
          type: "string"
        isDefault:
          type: "boolean"

    TagResponse:
      type: "object"
      properties:
        code:
          type: "integer"
          example: 200
          description: "如果响应成功则返回200状态码，响应失败返回返回其他状态码。"
        msg:
          type: "string"
          description: "响应返回的基本消息"
        data:
          type: "object"
          description: "返回的结果"

    ModifyTagInfo:
      type: "object"
      properties:
        name:
          type: "string"
        scope:
          type: "string"
        itemId:
          type: "string"
        isDefault:
          type: "boolean"
        oldName:
          type: "string"

    IgnoreTagInfo:
      type: "object"
      properties:
        ignore-level:
          type: "string"
        type:
          type: "string"
        repo-id:
          type: "string"

    IgnoreRecord:
      type: "object"
      properties:
        uuid:
          type: "string"
        userId:
          type: "string"
        level:
          type: "integer"
        type:
          type: "string"
        repoId:
          type: "string"
        repoName:
          type: "string"

    IgnoreRecordList:
      type: "array"
      items:
        $ref: '#/components/schemas/IgnoreRecord'

    IsSolvedTagResponse:
      type: "object"
      properties:
        code:
          type: "integer"
          example: 200
          description: "如果响应成功则返回200状态码，响应失败返回返回其他状态码。"
        msg:
          type: "string"
          description: "响应返回的基本消息"
        data:
          type: "boolean"
          description: "是否是已解决"














