-- MySQL dump 10.13  Distrib 5.7.19, for Linux (x86_64)
--
-- Host: localhost    Database: issueTracker
-- ------------------------------------------------------
-- Server version	5.7.19-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `issueType`
--

DROP TABLE IF EXISTS `issueType`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `issueType` (
  `uuid` varchar(36) NOT NULL,
  `type` varchar(128) DEFAULT NULL,
  `tool` varchar(36) DEFAULT NULL,
  `category` varchar(128) DEFAULT NULL,
  `description` mediumtext,
  PRIMARY KEY (`uuid`),
  UNIQUE KEY `uuid` (`uuid`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `issueType`
--

LOCK TABLES `issueType` WRITE;
/*!40000 ALTER TABLE `issueType` DISABLE KEYS */;
INSERT INTO `issueType` VALUES ('00375072-af08-4e7a-9700-66fbba6efc8f','DM_EXIT','findbugs','Bad practice','Dm: Method invokes System.exit(...)'),('007ce73e-8234-4900-a3e0-d1d1e6348535','PZ_DONT_REUSE_ENTRY_OBJECTS_IN_ITERATORS','findbugs','Bad practice','PZ: Don\'t reuse entry objects in iterators'),('023678e8-32e0-400b-809b-de977db68af7','NP_CLOSING_NULL','findbugs','Correctness','NP: close() invoked on a value that is always null'),('0253127d-e87b-4523-a95d-788ec8989e86','VO_VOLATILE_REFERENCE_TO_ARRAY','findbugs','Multithreaded correctness','VO: A volatile reference to an array doesn\'t treat the array elements as volatile'),('0297f591-a3ed-49ad-92d8-161c7c606e1b','NP_PARAMETER_MUST_BE_NONNULL_BUT_MARKED_AS_NULLABLE','findbugs','Dodgy code','NP: Parameter must be non-null but is marked as nullable'),('04ae6235-c4c1-41d9-b002-c5c9ae141f0a','NP_IMMEDIATE_DEREFERENCE_OF_READLINE','findbugs','Dodgy code','NP: Immediate dereference of the result of readLine()'),('0610b28f-a0d9-43dd-bd75-fac1e4adf302','ICAST_INT_CAST_TO_FLOAT_PASSED_TO_ROUND','findbugs','Correctness','ICAST: int value cast to float and then passed to Math.round'),('06848595-fb52-4101-af54-a2446d5642d6','IC_INIT_CIRCULARITY','findbugs','Dodgy code','IC: Initialization circularity'),('07271748-f1da-4a49-a112-4a7ad89dd2ba','NP_NULL_ON_SOME_PATH_MIGHT_BE_INFEASIBLE','findbugs','Dodgy code','NP: Possible null pointer dereference on branch that might be infeasible'),('0784e1d5-a2f8-40cb-bcf9-4bf530ed2ff7','DLS_DEAD_STORE_OF_CLASS_LITERAL','findbugs','Correctness','DLS: Dead store of class literal'),('084f8be6-2ff8-4fd1-9729-a3a32dc0b931','EC_INCOMPATIBLE_ARRAY_COMPARE','findbugs','Correctness','EC: equals(...) used to compare incompatible arrays'),('094969a8-e457-48b9-85fa-93d333a8094a','RV_DONT_JUST_NULL_CHECK_READLINE','findbugs','Dodgy code','RV: Method discards result of readLine after checking if it is non-null'),('097e114d-3c96-473e-8e6f-0e3a6211128f','HE_INHERITS_EQUALS_USE_HASHCODE','findbugs','Bad practice','HE: Class inherits equals() and uses Object.hashCode()'),('0ab56b27-939a-4f37-9e6f-2495caa5484c','NP_NULL_ON_SOME_PATH_FROM_RETURN_VALUE','findbugs','Dodgy code','NP: Possible null pointer dereference due to return value of called method'),('0adcc013-7697-4276-9ef4-0fecb19331e4','INT_BAD_COMPARISON_WITH_SIGNED_BYTE','findbugs','Correctness','INT: Bad comparison of signed byte'),('0b6789d9-e35b-4dd1-b56b-0760c316aa7c','RV_RETURN_VALUE_IGNORED_BAD_PRACTICE','findbugs','Bad practice','RV: Method ignores exceptional return value'),('0c584040-c27f-4a13-ae47-685b7d7d9973','DMI_DOH','findbugs','Correctness','DMI: D\'oh! A nonsensical method invocation'),('0cf7feb2-4d1a-47f5-a8ee-d6354e72b483','DMI_BIGDECIMAL_CONSTRUCTED_FROM_DOUBLE','findbugs','Correctness','DMI: BigDecimal constructed from double that isn\'t represented precisely'),('0d3d8894-2540-457e-b0e3-7d64f6df9bc3','DLS_DEAD_LOCAL_STORE_OF_NULL','findbugs','Dodgy code','DLS: Dead store of null to local variable'),('0dcea266-15ec-4c27-8ab6-048e55254a67','UWF_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR','findbugs','Dodgy code','UwF: Field not initialized in constructor but dereferenced without null check'),('0e70b5d1-b4e0-43fe-a46b-31b6caf22a76','EQ_ALWAYS_FALSE','findbugs','Correctness','Eq: equals method always returns false'),('0ef2ee73-861a-435d-82f6-804c1c50af2c','OS_OPEN_STREAM_EXCEPTION_PATH','findbugs','Bad practice','OS: Method may fail to close stream on exception'),('0ef5d045-5ed8-4829-93c6-c5b018664b6f','SE_NONSTATIC_SERIALVERSIONID','findbugs','Bad practice','Se: serialVersionUID isn\'t static'),('0f52fe3e-95d9-41f6-bfe1-78a031d35b13','RV_CHECK_FOR_POSITIVE_INDEXOF','findbugs','Dodgy code','RV: Method checks to see if result of String.indexOf is positive'),('0f8e8b03-b7de-4dee-85aa-2de232d70166','SQL_NONCONSTANT_STRING_PASSED_TO_EXECUTE','findbugs','Security','SQL: Nonconstant string passed to execute or addBatch method on an SQL statement'),('0f8f6cf5-9745-4cec-97ba-9fdccc92f60f','DM_NUMBER_CTOR','findbugs','Performance','Bx: Method invokes inefficient Number constructor; use static valueOf instead'),('103c6242-fd4f-4ae6-97d5-1899d6bd5bd7','DMI_ENTRY_SETS_MAY_REUSE_ENTRY_OBJECTS','findbugs','Bad practice','DMI: Adding elements of an entry set may fail due to reuse of Entry objects'),('108a6736-528b-4897-9ecb-7fa091f63569','BX_UNBOXING_IMMEDIATELY_REBOXED','findbugs','Performance','Bx: Boxed value is unboxed and then immediately reboxed'),('1098daa4-e856-4341-a093-1f0ddb8c4728','SE_NO_SUITABLE_CONSTRUCTOR_FOR_EXTERNALIZATION','findbugs','Bad practice','Se: Class is Externalizable but doesn\'t define a void constructor'),('10be76b6-2033-4a00-8e76-067df3671ab7','BX_BOXING_IMMEDIATELY_UNBOXED_TO_PERFORM_COERCION','findbugs','Performance','Bx: Primitive value is boxed then unboxed to perform primitive coercion'),('1102029f-2f38-4c6f-8c46-f59ea1d25363','XFB_XML_FACTORY_BYPASS','findbugs','Dodgy code','XFB: Method directly allocates a specific implementation of xml interfaces'),('1131ed23-29d7-47ca-a1c4-df2fc0cb22bd','DM_NEW_FOR_GETCLASS','findbugs','Performance','Dm: Method allocates an object, only to get the class object'),('120950fa-c96b-4399-9177-b192d7ed3879','EQ_UNUSUAL','findbugs','Dodgy code','Eq: Unusual equals method '),('12423472-0db2-4827-991c-48f8814be6ef','VA_FORMAT_STRING_NO_PREVIOUS_ARGUMENT','findbugs','Correctness','FS: No previous argument for format string'),('125cf6dd-a38e-4c2e-abba-21cd08e4d320','LG_LOST_LOGGER_DUE_TO_WEAK_REFERENCE','findbugs','Experimental','LG: Potential lost logger changes due to weak reference in OpenJDK'),('128363de-8ea8-439e-a9b6-21a3e4e61522','RC_REF_COMPARISON_BAD_PRACTICE_BOOLEAN','findbugs','Bad practice','RC: Suspicious reference comparison of Boolean values'),('1351aeca-8577-466e-8010-a8805ff02604','DMI_USING_REMOVEALL_TO_CLEAR_COLLECTION','findbugs','Bad practice','DMI: Don\'t use removeAll to clear a collection'),('138671c0-3085-416b-86d3-c818d44dceaa','NP_UNWRITTEN_FIELD','findbugs','Correctness','NP: Read of unwritten field'),('139e086c-c0d6-4947-b0ea-f916052490bb','INT_VACUOUS_BIT_OPERATION','findbugs','Dodgy code','INT: Vacuous bit mask operation on integer value'),('13d9dde8-fb31-4843-944f-d3ee1e5e9501','SE_METHOD_MUST_BE_PRIVATE','findbugs','Correctness','Se: Method must be private in order for serialization to work'),('156f006c-c36a-4958-8f04-767f1011639c','VA_FORMAT_STRING_MISSING_ARGUMENT','findbugs','Correctness','FS: Format string references missing argument'),('16b8ba35-7f0d-4357-9828-5ca58f10d863','NP_METHOD_PARAMETER_TIGHTENS_ANNOTATION','findbugs','Dodgy code','NP: Method tightens nullness annotation on parameter'),('16cf0bba-636b-4dc5-a070-c6f4ab57c673','SBSC_USE_STRINGBUFFER_CONCATENATION','findbugs','Performance','SBSC: Method concatenates strings using + in a loop'),('18eaf19b-49fc-4fe8-9680-accb9a845b71','NM_VERY_CONFUSING','findbugs','Correctness','Nm: Very confusing method names'),('19bd7763-a0b7-4348-9450-a76443d0034d','UL_UNRELEASED_LOCK_EXCEPTION_PATH','findbugs','Multithreaded correctness','UL: Method does not release lock on all exception paths'),('1a6cbef2-4016-40af-803d-14ea4e748794','EI_EXPOSE_REP','findbugs','Malicious code vulnerability','EI: May expose internal representation by returning reference to mutable object'),('1ab7ecf7-0f23-497e-b615-0ddca8c2ee21','EQ_OTHER_USE_OBJECT','findbugs','Correctness','Eq: equals() method defined that doesn\'t override Object.equals(Object)'),('1b6ada84-03b5-4426-8aa2-a8b9a11ef8ae','LI_LAZY_INIT_STATIC','findbugs','Multithreaded correctness','LI: Incorrect lazy initialization of static field'),('1bfb1d51-4c6a-4053-9c5a-ef85e2da35d0','FI_USELESS','findbugs','Bad practice','FI: Finalizer does nothing but call superclass finalizer'),('1e0105ad-384d-437c-9f46-f70590082eb2','NM_FIELD_NAMING_CONVENTION','findbugs','Bad practice','Nm: Field names should start with a lower case letter'),('1e14524d-639c-4f5d-9f9a-3938ccf084cb','QBA_QUESTIONABLE_BOOLEAN_ASSIGNMENT','findbugs','Correctness','QBA: Method assigns boolean literal in boolean expression'),('1e27afab-0786-4759-a27c-4638c1ef294f','XSS_REQUEST_PARAMETER_TO_SEND_ERROR','findbugs','Security','XSS: Servlet reflected cross site scripting vulnerability in error page'),('1ea2e4ef-c38b-4a2e-b2c1-b166e20cb3df','IM_MULTIPLYING_RESULT_OF_IREM','findbugs','Correctness','IM: Integer multiply of result of integer remainder'),('1ede88a3-2a79-4107-929a-81d12882d636','IL_INFINITE_RECURSIVE_LOOP','findbugs','Correctness','IL: An apparent infinite recursive loop'),('1efd6ff1-9102-4d25-9241-bd49be7ddcf6','BIT_AND_ZZ','findbugs','Correctness','BIT: Check to see if ((...) & 0) == 0'),('1fd47d99-5c46-4a77-8fa4-2d7bef2b4ba1','REC_CATCH_EXCEPTION','findbugs','Dodgy code','REC: Exception is caught when Exception is not thrown'),('20a80624-9aaf-48aa-9985-570414b09668','MF_CLASS_MASKS_FIELD','findbugs','Correctness','MF: Class defines field that masks a superclass field'),('2183d136-292e-42ed-8865-02bad2c2db19','WA_AWAIT_NOT_IN_LOOP','findbugs','Multithreaded correctness','Wa: Condition.await() not in loop '),('21df0221-6449-4bad-9c5b-3d0a074410ab','CN_IDIOM_NO_SUPER_CALL','findbugs','Bad practice','CN: clone method does not call super.clone()'),('2237ae26-357c-461a-a33f-0d325550a7e7','XSS_REQUEST_PARAMETER_TO_JSP_WRITER','findbugs','Security','XSS: JSP reflected cross site scripting vulnerability'),('223bea8d-0db7-46fd-a469-8da04c6afb8e','ME_MUTABLE_ENUM_FIELD','findbugs','Bad practice','ME: Enum field is public and mutable'),('2389e98b-29ca-47ca-af10-d4d4ed2f92a6','SIC_INNER_SHOULD_BE_STATIC_NEEDS_THIS','findbugs','Performance','SIC: Could be refactored into a static inner class'),('23b55cbb-022b-4cd3-a9fe-c5dc31c2d461','ICAST_INT_CAST_TO_DOUBLE_PASSED_TO_CEIL','findbugs','Correctness','ICAST: Integral value cast to double and then passed to Math.ceil'),('24218454-6e4e-4f1c-9780-54e4f0da1efc','EQ_ABSTRACT_SELF','findbugs','Bad practice','Eq: Abstract class defines covariant equals() method'),('269d3649-bd3c-45d2-b3eb-36c5090e7e9d','DL_SYNCHRONIZATION_ON_BOXED_PRIMITIVE','findbugs','Multithreaded correctness','DL: Synchronization on boxed primitive'),('275bcb0d-1ea7-4ead-9ef3-4ac76f28ffa9','EC_BAD_ARRAY_COMPARE','findbugs','Correctness','EC: Invocation of equals() on an array, which is equivalent to =='),('284da1f9-df99-4c0b-b553-c55d1a1925e9','MS_MUTABLE_COLLECTION','findbugs','Malicious code vulnerability','MS: Field is a mutable collection'),('295cddc0-d4d6-4506-8954-fa573580aa46','RR_NOT_CHECKED','findbugs','Bad practice','RR: Method ignores results of InputStream.read()'),('29901e5c-e8a9-407d-b349-f25c79dcb997','SF_SWITCH_NO_DEFAULT','findbugs','Dodgy code','SF: Switch statement found where default case is missing'),('2ac3aac7-1dd1-4ef5-a7b1-2668323a5e83','SA_LOCAL_DOUBLE_ASSIGNMENT','findbugs','Dodgy code','SA: Double assignment of local variable '),('2b56f6ff-df34-4c7b-8ddc-8b6b3297af56','SE_COMPARATOR_SHOULD_BE_SERIALIZABLE','findbugs','Bad practice','Se: Comparator doesn\'t implement Serializable'),('2bcd921d-9f9b-480e-9df2-c9aba05a730e','JCIP_FIELD_ISNT_FINAL_IN_IMMUTABLE_CLASS','findbugs','Bad practice','JCIP: Fields of immutable classes should be final'),('2dbdc0f5-ad53-4fba-86b8-1012c3271f49','EQ_SELF_NO_OBJECT','findbugs','Bad practice','Eq: Covariant equals() method defined'),('2e4a55ba-3c9b-4573-8a72-10a6b02d149b','TQ_COMPARING_VALUES_WITH_INCOMPATIBLE_TYPE_QUALIFIERS','findbugs','Correctness','TQ: Comparing values with incompatible type qualifiers'),('30a3f4c8-dded-4f50-9f9b-fca60e81858f','FI_PUBLIC_SHOULD_BE_PROTECTED','findbugs','Malicious code vulnerability','FI: Finalizer should be protected, not public'),('325b4977-c973-4ef7-910a-9e39e30bcb99','EC_UNRELATED_TYPES_USING_POINTER_EQUALITY','findbugs','Correctness','EC: Using pointer equality to compare different types'),('32b44cac-5be8-4945-a025-ed19175e8acd','FI_MISSING_SUPER_CALL','findbugs','Bad practice','FI: Finalizer does not call superclass finalizer'),('33348ac4-fdaa-4f9c-9ba3-1e515f900dcc','DMI_THREAD_PASSED_WHERE_RUNNABLE_EXPECTED','findbugs','Dodgy code','Dm: Thread passed where Runnable expected'),('33375dd0-7212-4a2a-9e73-4592652ee374','IJU_BAD_SUITE_METHOD','findbugs','Correctness','IJU: TestCase declares a bad suite method '),('335d0fcb-ee48-4614-8c84-c83d8ff511e1','UC_USELESS_CONDITION','findbugs','Dodgy code','UC: Condition has no effect'),('33d1f1f3-d029-4433-a80e-a5e81a995d99','SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH','findbugs','Correctness','SF: Dead store due to switch statement fall through'),('3440aa88-454e-4172-b230-41debbf8c4ae','SE_READ_RESOLVE_IS_STATIC','findbugs','Correctness','Se: The readResolve method must not be declared as a static method.  '),('34c1be74-f9b7-4830-9960-aa837cabd44e','BC_VACUOUS_INSTANCEOF','findbugs','Dodgy code','BC: instanceof will always return true'),('354e21d6-0765-4c87-a2dc-d42d20a93a6f','SA_FIELD_SELF_COMPARISON','findbugs','Correctness','SA: Self comparison of field with itself'),('362ed100-5bf0-4f1d-9478-5d77b97ecfd9','EQ_COMPARETO_USE_OBJECT_EQUALS','findbugs','Bad practice','Eq: Class defines compareTo(...) and uses Object.equals()'),('36731358-bc69-437a-894d-9c6e66f0e4d6','NP_DEREFERENCE_OF_READLINE_VALUE','findbugs','Dodgy code','NP: Dereference of the result of readLine() without nullcheck'),('36cc2e17-745d-497e-ad22-7d078c6cf631','JLM_JSR166_UTILCONCURRENT_MONITORENTER','findbugs','Multithreaded correctness','JLM: Synchronization performed on util.concurrent instance'),('36ea3eea-eed4-4fce-8093-a757e5921ac6','NP_TOSTRING_COULD_RETURN_NULL','findbugs','Bad practice','NP: toString method may return null'),('37303308-abba-4349-bf8e-c42656a08720','HSC_HUGE_SHARED_STRING_CONSTANT','findbugs','Performance','HSC: Huge string constants is duplicated across multiple class files'),('3793a0b7-f60d-4984-baad-190cb6ab9a60','UC_USELESS_OBJECT_STACK','findbugs','Dodgy code','UC: Useless object created on stack'),('38e15292-0ae0-43cc-9340-f9930f4a25ec','RV_RETURN_VALUE_IGNORED_NO_SIDE_EFFECT','findbugs','Dodgy code','RV: Return value of method without side effect is ignored'),('3947b5b4-839e-4dec-90d9-89a727e8e208','SIC_THREADLOCAL_DEADLY_EMBRACE','findbugs','Correctness','SIC: Deadly embrace of non-static inner class and thread local'),('39aaf38f-0805-45ed-9634-f8cc4fdd832c','HE_HASHCODE_USE_OBJECT_EQUALS','findbugs','Bad practice','HE: Class defines hashCode() and uses Object.equals()'),('3bf7c4f7-a0a9-41c5-b877-c53a2f1dedf7','DL_SYNCHRONIZATION_ON_SHARED_CONSTANT','findbugs','Multithreaded correctness','DL: Synchronization on interned String '),('3bfcb069-5a87-447a-a813-72e5c9b6db71','NM_LCASE_HASHCODE','findbugs','Correctness','Nm: Class defines hashcode(); should it be hashCode()?'),('3c7138cb-8ddb-4338-bee2-40a1e427fa66','NS_DANGEROUS_NON_SHORT_CIRCUIT','findbugs','Dodgy code','NS: Potentially dangerous use of non-short-circuit logic'),('3d66067f-db2f-444a-9f2c-e722aa5ab008','URF_UNREAD_PUBLIC_OR_PROTECTED_FIELD','findbugs','Dodgy code','UrF: Unread public/protected field'),('3d7ce6e2-2c68-4e51-a25a-a7d6a4257730','STCAL_STATIC_CALENDAR_INSTANCE','findbugs','Multithreaded correctness','STCAL: Static Calendar field'),('3ec4dd42-9d2c-4fc5-a09e-62b02b6e0c9f','SA_FIELD_DOUBLE_ASSIGNMENT','findbugs','Dodgy code','SA: Double assignment of field'),('3f7b96e6-4cfb-4614-a857-b97edcc695bb','IM_BAD_CHECK_FOR_ODD','findbugs','Dodgy code','IM: Check for oddness that won\'t work for negative numbers '),('409d78bb-0a1b-4448-bbff-ce78be8f472e','BIT_SIGNED_CHECK_HIGH_BIT','findbugs','Correctness','BIT: Check for sign of bitwise operation'),('40f1be94-f680-4ed4-883e-632843343ab9','RCN_REDUNDANT_NULLCHECK_OF_NULL_VALUE','findbugs','Dodgy code','RCN: Redundant nullcheck of value known to be null'),('4197e60f-9853-4927-9362-3ebef83f65d3','DMI_INVOKING_HASHCODE_ON_ARRAY','findbugs','Correctness','DMI: Invocation of hashCode on an array'),('42007e67-9f67-4497-9f89-b561f824ab37','SE_BAD_FIELD','findbugs','Bad practice','Se: Non-transient non-serializable instance field in serializable class'),('44c27884-22c9-481a-903a-c1395bde890f','IT_NO_SUCH_ELEMENT','findbugs','Bad practice','It: Iterator next() method can\'t throw NoSuchElementException'),('45130584-ddaf-4271-88c6-e8333b2fa9d3','BSHIFT_WRONG_ADD_PRIORITY','findbugs','Correctness','BSHIFT: Possible bad parsing of shift operation'),('45a66ad1-f2dd-4aff-b357-0e85de29b57c','SR_NOT_CHECKED','findbugs','Bad practice','RR: Method ignores results of InputStream.skip()'),('45b0861a-2324-4c7d-98ae-925f41bfc252','SE_READ_RESOLVE_MUST_RETURN_OBJECT','findbugs','Bad practice','Se: The readResolve method must be declared with a return type of Object. '),('45d76ddb-3670-4bbb-b7e1-ba44725a251e','TLW_TWO_LOCK_WAIT','findbugs','Multithreaded correctness','TLW: Wait with two locks held'),('4631e5d4-8038-4fd4-9a44-8e280a1de722','DMI_VACUOUS_SELF_COLLECTION_CALL','findbugs','Correctness','DMI: Vacuous call to collections'),('4684e051-5f0d-4040-aed0-f6199de0efbb','SIC_INNER_SHOULD_BE_STATIC_ANON','findbugs','Performance','SIC: Could be refactored into a named static inner class'),('486629a7-baa1-4aa6-ba7b-08ebb5e15b43','VA_FORMAT_STRING_BAD_CONVERSION','findbugs','Correctness','FS: The type of a supplied argument doesn\'t match format specifier'),('48e96a5d-6d46-453a-9dd0-9319aaedf4dd','MTIA_SUSPECT_SERVLET_INSTANCE_FIELD','findbugs','Dodgy code','MTIA: Class extends Servlet class and uses instance variables'),('49b8779a-2cbd-44e2-8b93-44ac023d3737','DLS_DEAD_LOCAL_STORE_IN_RETURN','findbugs','Dodgy code','DLS: Useless assignment in return statement'),('4a2feb76-cf35-42c5-8ede-f511855e58d7','CN_IMPLEMENTS_CLONE_BUT_NOT_CLONEABLE','findbugs','Bad practice','CN: Class defines clone() but doesn\'t implement Cloneable'),('4a54f907-9eca-475f-81d1-43819064a82f','FI_FINALIZER_ONLY_NULLS_FIELDS','findbugs','Bad practice','FI: Finalizer only nulls fields'),('4c1037b2-85d8-4f17-bab7-d63837b77d09','MTIA_SUSPECT_STRUTS_INSTANCE_FIELD','findbugs','Dodgy code','MTIA: Class extends Struts Action class and uses instance variables'),('4c4c6f97-454d-469e-8223-262b21864fda','EI_EXPOSE_REP2','findbugs','Malicious code vulnerability','EI2: May expose internal representation by incorporating reference to mutable object'),('4c71f940-bcad-4f4a-bffd-37755acbb713','DMI_INVOKING_TOSTRING_ON_ANONYMOUS_ARRAY','findbugs','Correctness','USELESS_STRING: Invocation of toString on an unnamed array'),('4c9d198f-c3fd-45dd-8185-ff1b104ae21d','BC_IMPOSSIBLE_INSTANCEOF','findbugs','Correctness','BC: instanceof will always return false'),('4d46e0c2-c18b-4a03-83bc-b5ca09e1496e','RC_REF_COMPARISON','findbugs','Correctness','RC: Suspicious reference comparison'),('4da86396-e740-47dc-ad28-deb0157bd32e','DMI_RANDOM_USED_ONLY_ONCE','findbugs','Bad practice','DMI: Random object created and used only once'),('4f177d48-e75f-4b45-9116-d92df53d4d9c','DLS_OVERWRITTEN_INCREMENT','findbugs','Correctness','DLS: Overwritten increment'),('4f7130dc-9d9e-4c84-8f60-c3edb2dd3ca1','JLM_JSR166_LOCK_MONITORENTER','findbugs','Multithreaded correctness','JLM: Synchronization performed on Lock'),('4fd4b0f9-56bc-4de8-8df5-84be6ae65a11','NP_NULL_ON_SOME_PATH','findbugs','Correctness','NP: Possible null pointer dereference'),('4ff8fc94-e24a-492a-97da-d94d6ffcdb79','TQ_MAYBE_SOURCE_VALUE_REACHES_NEVER_SINK','findbugs','Correctness','TQ: Value that might carry a type qualifier is always used in a way prohibits it from having that type qualifier'),('50ecf736-4a6e-4f2c-853e-7a7b79fced31','SF_SWITCH_FALLTHROUGH','findbugs','Dodgy code','SF: Switch statement found where one case falls through to the next case'),('517e77bf-f309-4bf4-acf7-1d4fef46614c','NP_BOOLEAN_RETURN_NULL','findbugs','Bad practice','NP: Method with Boolean return type returns explicit null'),('51d1ff43-54d2-47b4-bbbf-60319c5a56a4','DM_NEXTINT_VIA_NEXTDOUBLE','findbugs','Performance','Dm: Use the nextInt method of Random rather than nextDouble to generate a random integer'),('51d82210-7b0b-4995-bb70-ea3f9aac3026','EQ_OVERRIDING_EQUALS_NOT_SYMMETRIC','findbugs','Correctness','Eq: equals method overrides equals in superclass and may not be symmetric'),('5231be7a-fb71-4930-8799-394454786d09','MWN_MISMATCHED_NOTIFY','findbugs','Multithreaded correctness','MWN: Mismatched notify()'),('528e486e-73e1-4881-bab1-accb37f41a4a','RV_01_TO_INT','findbugs','Correctness','RV: Random value from 0 to 1 is coerced to the integer 0'),('53424d28-299d-4135-aaa4-2dd5da2014e7','RS_READOBJECT_SYNC','findbugs','Multithreaded correctness','RS: Class\'s readObject() method is synchronized'),('551e17dd-9e6f-4327-949b-a25579d2325e','SIO_SUPERFLUOUS_INSTANCEOF','findbugs','Correctness','SIO: Unnecessary type check done using instanceof operator'),('561be579-abfd-4b8e-8b4b-3943540d1ece','EC_UNRELATED_INTERFACES','findbugs','Correctness','EC: Call to equals() comparing different interface types'),('56e612ff-51ab-4a0a-ae75-57e0abce2fcf','RU_INVOKE_RUN','findbugs','Multithreaded correctness','Ru: Invokes run on a thread (did you mean to start it instead?)'),('56f310ad-47c3-44cf-9a3d-1cc1fbee2125','VA_FORMAT_STRING_BAD_CONVERSION_FROM_ARRAY','findbugs','Correctness','USELESS_STRING: Array formatted in useless way using format string'),('571f0d0d-3b80-4e6b-a38d-9b9b6599560e','NP_CLONE_COULD_RETURN_NULL','findbugs','Bad practice','NP: Clone method may return null'),('57873b4b-d94b-4cb4-9b95-92ba86d29012','EC_NULL_ARG','findbugs','Correctness','EC: Call to equals(null)'),('584b069c-c474-4e4c-bd18-046796ae809b','RE_CANT_USE_FILE_SEPARATOR_AS_REGULAR_EXPRESSION','findbugs','Correctness','RE: File.separator used for regular expression'),('58b2c2d5-abab-4fdc-8c89-05bacad72333','NP_GUARANTEED_DEREF','findbugs','Correctness','NP: Null value is guaranteed to be dereferenced'),('59097853-0b9b-4d65-af98-f2bdefdff4b7','NP_ALWAYS_NULL','findbugs','Correctness','NP: Null pointer dereference'),('5b41bc31-b02c-46dc-a6b8-5f874dcb8b8f','DM_STRING_TOSTRING','findbugs','Performance','Dm: Method invokes toString() method on a String'),('5b72c810-be6b-4d00-8009-8b1d277b377d','MWN_MISMATCHED_WAIT','findbugs','Multithreaded correctness','MWN: Mismatched wait()'),('5ba37dbf-a0e2-436a-9774-d7012e73f943','QF_QUESTIONABLE_FOR_LOOP','findbugs','Dodgy code','QF: Complicated, subtle or wrong increment in for-loop '),('5bac989b-293c-4f3b-a2f2-845baf6181e0','BC_IMPOSSIBLE_DOWNCAST_OF_TOARRAY','findbugs','Correctness','BC: Impossible downcast of toArray() result'),('5c61f158-4157-4445-8b23-1d2cec557033','EQ_SELF_USE_OBJECT','findbugs','Correctness','Eq: Covariant equals() method defined, Object.equals(Object) inherited'),('5c76a66e-306f-437a-ba78-e8311e977b5d','MSF_MUTABLE_SERVLET_FIELD','findbugs','Multithreaded correctness','MSF: Mutable servlet field'),('5d525688-6336-46a8-b43e-0f03bc5abf40','TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_NEVER_SINK','findbugs','Dodgy code','TQ: Value required to not have type qualifier, but marked as unknown'),('5e033e21-799a-4e1b-b5ea-df8e35f341f3','EQ_COMPARING_CLASS_NAMES','findbugs','Correctness','Eq: equals method compares class names rather than class objects'),('5e12a4ef-2485-4951-9ee1-a8b9b7e0dcb6','SQL_BAD_PREPARED_STATEMENT_ACCESS','findbugs','Correctness','SQL: Method attempts to access a prepared statement parameter with index 0'),('5e1f9a3c-9c1d-4d64-b23c-eb81cdf1387f','CO_COMPARETO_RESULTS_MIN_VALUE','findbugs','Bad practice','Co: compareTo()/compare() returns Integer.MIN_VALUE'),('5ebab972-9f8b-465f-855a-3c59913614c3','EQ_OTHER_NO_OBJECT','findbugs','Correctness','Eq: equals() method defined that doesn\'t override equals(Object)'),('5fe1b5bb-494b-4dc4-bbf5-a6bd9181a95f','SE_NONFINAL_SERIALVERSIONID','findbugs','Bad practice','Se: serialVersionUID isn\'t final'),('604ef8d4-cfca-49e2-841d-592e497b211f','WA_NOT_IN_LOOP','findbugs','Multithreaded correctness','Wa: Wait not in loop '),('61212a53-d9ed-4f40-b3a9-cc6858a860af','DMI_ANNOTATION_IS_NOT_VISIBLE_TO_REFLECTION','findbugs','Correctness','Dm: Can\'t use reflection to check for presence of annotation without runtime retention'),('61491d42-e487-4b98-a2ce-48b317acdd4e','UW_UNCOND_WAIT','findbugs','Multithreaded correctness','UW: Unconditional wait'),('6385428b-9d7d-4eae-9481-b0a131ee3cef','SE_BAD_FIELD_STORE','findbugs','Bad practice','Se: Non-serializable value stored into instance field of a serializable class'),('6400828b-a1a4-4399-ba09-7f03944d2fd9','EQ_DOESNT_OVERRIDE_EQUALS','findbugs','Dodgy code','Eq: Class doesn\'t override equals in superclass'),('6422a8cc-569a-4616-89cc-84e143511628','EC_ARRAY_AND_NONARRAY','findbugs','Correctness','EC: equals() used to compare array and nonarray'),('645b94f7-2426-48e8-b03c-596e92fcb256','DLS_DEAD_LOCAL_STORE','findbugs','Dodgy code','DLS: Dead store to local variable'),('64bbd891-dd24-4451-ad56-07dfbfee6939','FI_EMPTY','findbugs','Bad practice','FI: Empty finalizer should be deleted'),('6533fb3b-e830-4294-a8d4-d4d1e97466f1','ICAST_INTEGER_MULTIPLY_CAST_TO_LONG','findbugs','Dodgy code','ICAST: Result of integer multiplication cast to long'),('656abe81-0616-4e44-a9cf-26c21465846f','STCAL_INVOKE_ON_STATIC_DATE_FORMAT_INSTANCE','findbugs','Multithreaded correctness','STCAL: Call to static DateFormat'),('669ad367-6ba1-46e6-ba86-a7f63b395ef4','STCAL_INVOKE_ON_STATIC_CALENDAR_INSTANCE','findbugs','Multithreaded correctness','STCAL: Call to static Calendar'),('6751b8f9-fae2-44da-ad98-16e86830ee5d','INT_BAD_COMPARISON_WITH_NONNEGATIVE_VALUE','findbugs','Correctness','INT: Bad comparison of nonnegative value with negative constant or zero'),('6828df28-323f-452d-93bf-0fe0d438e7dc','DM_RUN_FINALIZERS_ON_EXIT','findbugs','Bad practice','Dm: Method invokes dangerous method runFinalizersOnExit'),('689ab1f8-220b-4115-9630-82eac317a6d6','SE_NO_SUITABLE_CONSTRUCTOR','findbugs','Bad practice','Se: Class is Serializable but its superclass doesn\'t define a void constructor'),('69424f87-b88d-46b7-819b-bea469d865ba','HE_SIGNATURE_DECLARES_HASHING_OF_UNHASHABLE_CLASS','findbugs','Correctness','HE: Signature declares use of unhashable class in hashed construct'),('699241a2-4b6a-45e2-aec9-42a0dfc162f1','STI_INTERRUPTED_ON_CURRENTTHREAD','findbugs','Correctness','STI: Unneeded use of currentThread() call, to call interrupted() '),('6a408de2-2cc3-4cca-9cf5-fe3dde2a09cc','NP_NULL_INSTANCEOF','findbugs','Correctness','NP: A known null value is checked to see if it is an instance of a type'),('6a4cf584-8bcb-4659-afed-8bf56308e51d','GC_UNCHECKED_TYPE_IN_GENERIC_CALL','findbugs','Bad practice','GC: Unchecked type in generic call'),('6a765990-72d9-4e5f-a4da-23dfef6609c6','WS_WRITEOBJECT_SYNC','findbugs','Multithreaded correctness','WS: Class\'s writeObject() method is synchronized but nothing else is'),('6aed4113-4bc3-49b5-91fc-85af24fa066f','DMI_BAD_MONTH','findbugs','Correctness','DMI: Bad constant value for month'),('6b2cb7d7-53b6-410c-a4d8-3fef63faf92f','EQ_ALWAYS_TRUE','findbugs','Correctness','Eq: equals method always returns true'),('6b86f2d4-8e24-41fd-bcd0-1fc1113839f8','UC_USELESS_OBJECT','findbugs','Dodgy code','UC: Useless object created'),('6d959fda-9aea-469a-96cc-f0646329cc6b','IJU_NO_TESTS','findbugs','Correctness','IJU: TestCase has no tests'),('6db96fa4-8f29-4c94-aa3c-b8c15360c4e7','DM_CONVERT_CASE','findbugs','Internationalization','Dm: Consider using Locale parameterized version of invoked method'),('6e3c91bf-1246-44dc-bd63-7803b3361d52','SW_SWING_METHODS_INVOKED_IN_SWING_THREAD','findbugs','Bad practice','SW: Certain swing methods needs to be invoked in Swing thread'),('6e403c6b-7b0c-4b5a-ab85-d1597af50f59','EC_UNRELATED_CLASS_AND_INTERFACE','findbugs','Correctness','EC: Call to equals() comparing unrelated class and interface'),('6e76a6d9-cad5-41ec-911d-93ff0dcc4b94','DP_CREATE_CLASSLOADER_INSIDE_DO_PRIVILEGED','findbugs','Malicious code vulnerability','DP: Classloaders should only be created inside doPrivileged block'),('6ef4a445-3d73-4bcb-b7b7-9937a616d1a9','HRS_REQUEST_PARAMETER_TO_COOKIE','findbugs','Security','HRS: HTTP cookie formed from untrusted input'),('70dc5c77-1fd9-4bfb-a29a-065cd46e4f76','BC_BAD_CAST_TO_ABSTRACT_COLLECTION','findbugs','Dodgy code','BC: Questionable cast to abstract collection '),('71bb6a05-7b36-438d-bfad-0fb1780ba894','DLS_DEAD_LOCAL_STORE_SHADOWS_FIELD','findbugs','Dodgy code','DLS: Dead store to local variable that shadows field'),('7222e4f6-3568-4a72-a6e5-c075ae266279','SS_SHOULD_BE_STATIC','findbugs','Performance','SS: Unread field: should this field be static?'),('724af0ea-4e07-4940-84cb-253a5eb76892','NP_NONNULL_PARAM_VIOLATION','findbugs','Correctness','NP: Method call passes null to a non-null parameter '),('7349a731-dce9-446f-ae26-bd9ec17452ea','SE_INNER_CLASS','findbugs','Bad practice','Se: Serializable inner class'),('73594044-0a4b-45b8-968d-027235ee5f2c','IO_APPENDING_TO_OBJECT_OUTPUT_STREAM','findbugs','Correctness','IO: Doomed attempt to append to an object output stream'),('73f003f4-598a-4a61-bcb6-fbffab111f69','RV_RETURN_VALUE_OF_PUTIFABSENT_IGNORED','findbugs','Multithreaded correctness','RV: Return value of putIfAbsent ignored, value passed to putIfAbsent reused'),('74373584-2f64-409c-a64b-7d241741d9de','OS_OPEN_STREAM','findbugs','Bad practice','OS: Method may fail to close stream'),('745117c2-b9b0-449e-b2c4-40d3f5c7ec3b','RCN_REDUNDANT_COMPARISON_TWO_NULL_VALUES','findbugs','Dodgy code','RCN: Redundant comparison of two null values'),('74e846f6-cea8-437d-8366-37c05fecdc5e','ODR_OPEN_DATABASE_RESOURCE_EXCEPTION_PATH','findbugs','Bad practice','ODR: Method may fail to close database resource on exception'),('75eb894f-9351-4c5e-9b01-566e75a67e24','DMI_COLLECTIONS_SHOULD_NOT_CONTAIN_THEMSELVES','findbugs','Correctness','DMI: Collections should not contain themselves'),('762775cf-4412-4212-b2a4-ec1d0efbcb9c','DMI_CALLING_NEXT_FROM_HASNEXT','findbugs','Correctness','DMI: hasNext method invokes next'),('77f63636-ffc1-4680-87e6-29189a5fed11','NP_METHOD_RETURN_RELAXING_ANNOTATION','findbugs','Dodgy code','NP: Method relaxes nullness annotation on return value'),('785f080d-8e06-4f6a-9fd0-e9380d715c37','EC_UNRELATED_TYPES','findbugs','Correctness','EC: Call to equals() comparing different types'),('78ccb2b1-b0a4-420e-9f34-dbcf41da487d','RI_REDUNDANT_INTERFACES','findbugs','Dodgy code','RI: Class implements same interface as superclass'),('79bd35cc-17b6-46bb-8d90-4714f8da0ce8','J2EE_STORE_OF_NON_SERIALIZABLE_OBJECT_INTO_SESSION','findbugs','Bad practice','J2EE: Store of non serializable object into HttpSession'),('7a094222-a290-45b2-a9d4-8d2a09614e23','NM_METHOD_CONSTRUCTOR_CONFUSION','findbugs','Correctness','Nm: Apparent method/constructor confusion'),('7a1a72cd-5888-4a21-9e72-666cfd71be39','PT_RELATIVE_PATH_TRAVERSAL','findbugs','Security','PT: Relative path traversal in servlet'),('7a571a44-a148-42ae-9df1-7c18d31e87c8','NN_NAKED_NOTIFY','findbugs','Multithreaded correctness','NN: Naked notify'),('7aa2cc1f-b206-44c6-b063-ba8609801245','IS_FIELD_NOT_GUARDED','findbugs','Multithreaded correctness','IS: Field not guarded against concurrent access'),('7ac38dc1-5491-43e9-8bcf-853f85b827c8','MS_SHOULD_BE_REFACTORED_TO_BE_FINAL','findbugs','Malicious code vulnerability','MS: Field isn\'t final but should be refactored to be so'),('7b217da6-100e-41b2-9d8c-2ba0345bf87f','NP_NULL_PARAM_DEREF_ALL_TARGETS_DANGEROUS','findbugs','Correctness','NP: Method call passes null for non-null parameter'),('7baadf9e-47ad-4342-bc29-b5ad89fc00f9','UM_UNNECESSARY_MATH','findbugs','Performance','UM: Method calls static Math class method on a constant value'),('7cc9441e-1f47-410c-aae4-023f8a34f002','MS_FINAL_PKGPROTECT','findbugs','Malicious code vulnerability','MS: Field should be both final and package protected'),('7d101732-3832-4c45-9fee-348e61e299f3','NP_SYNC_AND_NULL_CHECK_FIELD','findbugs','Multithreaded correctness','NP: Synchronize and null check on the same field.'),('7d815c75-1c85-4cb9-b98a-d3381b16955f','WL_USING_GETCLASS_RATHER_THAN_CLASS_LITERAL','findbugs','Multithreaded correctness','WL: Synchronization on getClass rather than class literal'),('7db6c290-0761-4eaf-a9ef-99e97314328f','BC_UNCONFIRMED_CAST','findbugs','Dodgy code','BC: Unchecked/unconfirmed cast'),('7de48e19-ad8e-4918-9fdc-5324b99ab0db','IJU_TEARDOWN_NO_SUPER','findbugs','Correctness','IJU: TestCase defines tearDown that doesn\'t call super.tearDown()'),('7e3c73b8-efd3-48d3-bf6f-ff21021753b4','DE_MIGHT_IGNORE','findbugs','Bad practice','DE: Method might ignore exception'),('7f186926-1263-4c3b-847f-73886d6d194f','IJU_SUITE_NOT_STATIC','findbugs','Correctness','IJU: TestCase implements a non-static suite method '),('7fcda7d8-61b7-4a98-9d0b-dea4da4a6080','IM_AVERAGE_COMPUTATION_COULD_OVERFLOW','findbugs','Dodgy code','IM: Computation of average could overflow'),('80114949-062c-480c-af15-da45467ed996','SE_TRANSIENT_FIELD_OF_NONSERIALIZABLE_CLASS','findbugs','Dodgy code','Se: Transient field of class that isn\'t Serializable. '),('8122e255-54e6-4908-897a-fa32de62a480','RANGE_ARRAY_OFFSET','findbugs','Correctness','RANGE: Array offset is out of bounds'),('814e0ab0-b23b-468e-bcf6-92c00405a926','SE_PRIVATE_READ_RESOLVE_NOT_INHERITED','findbugs','Dodgy code','Se: Private readResolve method not inherited by subclasses'),('820f9569-4507-42fb-a141-69409a387e3e','TQ_UNKNOWN_VALUE_USED_WHERE_ALWAYS_STRICTLY_REQUIRED','findbugs','Correctness','TQ: Value without a type qualifier used where a value is required to have that qualifier'),('8219a326-6f3a-48b9-ab5e-37c95efebad5','SA_FIELD_SELF_ASSIGNMENT','findbugs','Correctness','SA: Self assignment of field'),('825d486f-1145-4a3a-abae-8e4a562c2a74','DM_DEFAULT_ENCODING','findbugs','Internationalization','Dm: Reliance on default encoding'),('8274376c-424c-4d3b-8cfb-4d6fd95bdef3','LI_LAZY_INIT_UPDATE_STATIC','findbugs','Multithreaded correctness','LI: Incorrect lazy initialization and update of static field'),('8490ace0-ee65-4873-b6ac-ba56430906ed','PT_ABSOLUTE_PATH_TRAVERSAL','findbugs','Security','PT: Absolute path traversal in servlet'),('874d9152-bdcd-455b-88f9-db6297d05423','UWF_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD','findbugs','Dodgy code','UwF: Unwritten public or protected field'),('8776b7ad-c500-424d-8236-613df854c6db','FI_EXPLICIT_INVOCATION','findbugs','Bad practice','FI: Explicit invocation of finalizer'),('878ed6d6-a1d6-4be1-ad69-2b15ea8aa7f1','CO_COMPARETO_INCORRECT_FLOATING','findbugs','Bad practice','Co: compareTo()/compare() incorrectly handles float or double value'),('87a513bc-9b7d-4bc1-ba10-632acd4e60d0','NM_VERY_CONFUSING_INTENTIONAL','findbugs','Bad practice','Nm: Very confusing method names (but perhaps intentional)'),('87c79cae-e745-46a8-a765-68b0632f5372','RV_RETURN_VALUE_IGNORED_INFERRED','findbugs','Dodgy code','RV: Method ignores return value, is this OK?'),('87e81433-7fa2-4582-a350-315ca73aa7e9','SC_START_IN_CTOR','findbugs','Multithreaded correctness','SC: Constructor invokes Thread.start()'),('881071c0-dd6c-4af3-bff9-2108e9c127b7','NM_SAME_SIMPLE_NAME_AS_INTERFACE','findbugs','Bad practice','Nm: Class names shouldn\'t shadow simple name of implemented interface'),('881c92d1-40de-4f85-b90a-997e9542b56f','VA_PRIMITIVE_ARRAY_PASSED_TO_OBJECT_VARARG','findbugs','Correctness','VA: Primitive array passed to function expecting a variable number of object arguments'),('887a14db-2126-4778-a9bd-fbe0d4f3d03f','HE_USE_OF_UNHASHABLE_CLASS','findbugs','Correctness','HE: Use of class without a hashCode() method in a hashed data structure'),('894785d6-745e-4e8f-8c0d-5202d7129df7','RE_POSSIBLE_UNINTENDED_PATTERN','findbugs','Correctness','RE: \".\" or \"|\" used for regular expression'),('89dfbfe5-97ff-4802-8ff8-65c5aa2929f2','NP_NULL_ON_SOME_PATH_EXCEPTION','findbugs','Correctness','NP: Possible null pointer dereference in method on exception path'),('8a7b7155-f889-4831-bf2c-ec163ebb8f54','BIT_ADD_OF_SIGNED_BYTE','findbugs','Correctness','BIT: Bitwise add of signed byte value'),('8bab1b2a-0308-45e7-a011-129c75f354f1','BIT_IOR','findbugs','Correctness','BIT: Incompatible bit masks'),('8beddb45-6f3c-4542-8b59-220b96d57a8f','DMI_BLOCKING_METHODS_ON_URL','findbugs','Performance','Dm: The equals and hashCode methods of URL are blocking'),('8daa3404-d120-4783-bf03-ed5ed374bcd1','DMI_ARGUMENTS_WRONG_ORDER','findbugs','Correctness','DMI: Reversed method arguments'),('8e7a668c-3227-4335-a714-d93e869ebfd2','VA_FORMAT_STRING_BAD_ARGUMENT','findbugs','Correctness','FS: Format string placeholder incompatible with passed argument'),('8f7c174b-881f-4d96-842d-e0deed6bad68','ICAST_QUESTIONABLE_UNSIGNED_RIGHT_SHIFT','findbugs','Dodgy code','BSHIFT: Unsigned right shift cast to short/byte'),('908bdde5-64cf-4f14-b416-38e1cb20ea4e','CI_CONFUSED_INHERITANCE','findbugs','Dodgy code','CI: Class is final but declares protected field'),('9090b4bc-1974-4b00-9f34-9ac9b7241834','ML_SYNC_ON_UPDATED_FIELD','findbugs','Multithreaded correctness','ML: Method synchronizes on an updated field'),('917126f3-3fe3-4a39-89e3-8c7447bfdecf','EQ_GETCLASS_AND_CLASS_CONSTANT','findbugs','Bad practice','Eq: equals method fails for subtypes'),('9175c590-4040-4996-8a75-a56130911a2e','NM_WRONG_PACKAGE_INTENTIONAL','findbugs','Bad practice','Nm: Method doesn\'t override method in superclass due to wrong package for parameter'),('918f7036-3734-4842-b4b1-1dc34417bf4b','NP_NONNULL_RETURN_VIOLATION','findbugs','Correctness','NP: Method may return null, but is declared @Nonnull'),('9234fa48-f4e2-404f-a9e5-d38f8631d268','NM_LCASE_TOSTRING','findbugs','Correctness','Nm: Class defines tostring(); should it be toString()?'),('9326d3b1-83ed-4270-adf2-242cc3d44a72','DMI_HARDCODED_ABSOLUTE_FILENAME','findbugs','Dodgy code','DMI: Code contains a hard coded reference to an absolute pathname'),('937c4758-b8e0-44d7-8361-90f6d3c5d8da','VA_FORMAT_STRING_EXPECTED_MESSAGE_FORMAT_SUPPLIED','findbugs','Correctness','FS: MessageFormat supplied where printf style format expected'),('937caf03-aa7c-4ac6-9172-fed2a5f3a70a','BC_UNCONFIRMED_CAST_OF_RETURN_VALUE','findbugs','Dodgy code','BC: Unchecked/unconfirmed cast of return value from method'),('93853b2e-f47e-4be6-8d0f-8aac5b353e5d','NP_OPTIONAL_RETURN_NULL','findbugs','Correctness','NP: Method with Optional return type returns explicit null'),('94290443-cadc-49ac-9efb-2f0cf656d7b9','CNT_ROUGH_CONSTANT_VALUE','findbugs','Bad practice','CNT: Rough value of known constant found'),('943a979f-ed4e-4d45-af44-41676e6e21d7','URF_UNREAD_FIELD','findbugs','Performance','UrF: Unread field'),('94464aa8-0ef2-4735-99aa-3fcb8432cdf8','UCF_USELESS_CONTROL_FLOW','findbugs','Dodgy code','UCF: Useless control flow'),('949b4847-c7dd-4d20-b975-88e739a16d24','NP_ARGUMENT_MIGHT_BE_NULL','findbugs','Correctness','NP: Method does not check for null argument'),('94a1e713-77ef-4ad7-b0e1-07ee6201eab8','DMI_INVOKING_TOSTRING_ON_ARRAY','findbugs','Correctness','USELESS_STRING: Invocation of toString on an array'),('951017eb-f556-47b0-a02f-eb2693ec71fb','DM_BOXED_PRIMITIVE_FOR_COMPARE','findbugs','Performance','Bx: Boxing a primitive to compare'),('952a9da7-20bf-41f3-b7a0-a4a216cfd3d5','DMI_LONG_BITS_TO_DOUBLE_INVOKED_ON_INT','findbugs','Correctness','DMI: Double.longBitsToDouble invoked on an int'),('95a5d7d1-e89f-44e6-998d-93fa2a471853','DM_GC','findbugs','Performance','Dm: Explicit garbage collection; extremely dubious except in benchmarking code'),('96ad557a-2708-4eae-815a-9881368474ed','RV_NEGATING_RESULT_OF_COMPARETO','findbugs','Bad practice','RV: Negating the result of compareTo()/compare()'),('98b1f1db-9497-4d5a-9391-4cbd59fb85d7','ML_SYNC_ON_FIELD_TO_GUARD_CHANGING_THAT_FIELD','findbugs','Multithreaded correctness','ML: Synchronization on field in futile attempt to guard that field'),('98d8e445-69d4-4108-919a-44208002d2c6','WMI_WRONG_MAP_ITERATOR','findbugs','Performance','WMI: Inefficient use of keySet iterator instead of entrySet iterator'),('98d96384-0b9d-4f5c-a0b2-d5c8837798e9','UUF_UNUSED_PUBLIC_OR_PROTECTED_FIELD','findbugs','Dodgy code','UuF: Unused public or protected field'),('9acf9223-1fb0-4c0b-91c8-1a6f1450ae36','ICAST_IDIV_CAST_TO_DOUBLE','findbugs','Dodgy code','ICAST: Integral division result cast to double or float'),('9ad1b27b-65da-4d2e-bfe9-5b3aa199368b','FI_NULLIFY_SUPER','findbugs','Bad practice','FI: Finalizer nullifies superclass finalizer'),('9b139b24-1deb-40f9-a3a4-1dde7901cfcb','CO_ABSTRACT_SELF','findbugs','Bad practice','Co: Abstract class defines covariant compareTo() method'),('9b95be65-5350-48c1-9a08-c782d75f1fd9','IP_PARAMETER_IS_DEAD_BUT_OVERWRITTEN','findbugs','Correctness','IP: A parameter is dead upon entry to a method but overwritten'),('9bfb2554-4d45-4a3c-ba29-8178a2bb9d98','BIT_SIGNED_CHECK','findbugs','Bad practice','BIT: Check for sign of bitwise operation'),('9c6c7326-15a2-4cb9-96e9-4e82bde91376','UCF_USELESS_CONTROL_FLOW_NEXT_LINE','findbugs','Dodgy code','UCF: Useless control flow to next line'),('9d185dbf-739d-4632-a5a1-f3641825cd6e','MS_PKGPROTECT','findbugs','Malicious code vulnerability','MS: Field should be package protected'),('9d3a1fc3-b5c2-43c6-9a65-4c496ac7cdfb','DMI_SCHEDULED_THREAD_POOL_EXECUTOR_WITH_ZERO_CORE_THREADS','findbugs','Correctness','Dm: Creation of ScheduledThreadPoolExecutor with zero core threads'),('9dd41703-5d65-49c5-9f71-80937d19bd31','SQL_PREPARED_STATEMENT_GENERATED_FROM_NONCONSTANT_STRING','findbugs','Security','SQL: A prepared statement is generated from a nonconstant String'),('9e482ee5-32b5-4ad5-ae24-8e7853e15105','MS_SHOULD_BE_FINAL','findbugs','Malicious code vulnerability','MS: Field isn\'t final but should be'),('9ece92ca-cea7-4ef1-a549-468b01876769','DM_USELESS_THREAD','findbugs','Multithreaded correctness','Dm: A thread was created using the default empty run method'),('9fa576fb-4896-441b-84b8-7509b40a00fc','BX_BOXING_IMMEDIATELY_UNBOXED','findbugs','Performance','Bx: Primitive value is boxed and then immediately unboxed'),('a01a4e3b-3d97-49bf-8c92-44f3c91e3ee1','RANGE_ARRAY_LENGTH','findbugs','Correctness','RANGE: Array length is out of bounds'),('a1375d0e-6538-4899-b292-c6b8487b2273','UC_USELESS_VOID_METHOD','findbugs','Dodgy code','UC: Useless non-empty void method'),('a2ade3f2-5298-4012-bbfb-b5ca19b31a93','XSS_REQUEST_PARAMETER_TO_SERVLET_WRITER','findbugs','Security','XSS: Servlet reflected cross site scripting vulnerability'),('a338fe7f-6ab3-4dde-8942-b2fce0dd10d7','RC_REF_COMPARISON_BAD_PRACTICE','findbugs','Bad practice','RC: Suspicious reference comparison to constant'),('a4c32397-7576-4c39-92d5-967f38e2892d','SE_NO_SERIALVERSIONID','findbugs','Bad practice','SnVI: Class is Serializable, but doesn\'t define serialVersionUID'),('a7f7aec3-3c6b-4465-9654-6fcf15c64585','BC_BAD_CAST_TO_CONCRETE_COLLECTION','findbugs','Dodgy code','BC: Questionable cast to concrete collection'),('a8210b83-49c3-4d8c-9799-a434dfe83c44','RV_ABSOLUTE_VALUE_OF_RANDOM_INT','findbugs','Correctness','RV: Bad attempt to compute absolute value of signed random integer'),('a845b9af-a06a-4b18-8f8f-c6b1adad4928','EQ_DONT_DEFINE_EQUALS_FOR_ENUM','findbugs','Correctness','Eq: Covariant equals() method defined for enum'),('a8e9af47-d138-45fb-a31e-4195dd3f5a7e','SWL_SLEEP_WITH_LOCK_HELD','findbugs','Multithreaded correctness','SWL: Method calls Thread.sleep() with a lock held'),('aa34dc5a-9215-4f30-b1c0-40e686e3d4cf','DMI_FUTILE_ATTEMPT_TO_CHANGE_MAXPOOL_SIZE_OF_SCHEDULED_THREAD_POOL_EXECUTOR','findbugs','Correctness','Dm: Futile attempt to change max pool size of ScheduledThreadPoolExecutor'),('aab18b13-151c-4adc-aaf1-919931a13be6','DL_SYNCHRONIZATION_ON_UNSHARED_BOXED_PRIMITIVE','findbugs','Multithreaded correctness','DL: Synchronization on boxed primitive values'),('ab90f4d6-9247-46f5-8709-8e47dab89fd9','UI_INHERITANCE_UNSAFE_GETRESOURCE','findbugs','Bad practice','UI: Usage of GetResource may be unsafe if class is extended'),('ac7c5d1a-050f-4015-a3aa-2e57ed168fe1','RV_REM_OF_HASHCODE','findbugs','Dodgy code','RV: Remainder of hashCode could be negative'),('acab06c8-ca99-4c58-b2fb-1ea0ac13780f','TQ_ALWAYS_VALUE_USED_WHERE_NEVER_REQUIRED','findbugs','Correctness','TQ: Value annotated as carrying a type qualifier used where a value that must not carry that qualifier is required'),('acb123c8-bb67-4bc5-9a41-3e6c8e041137','NP_NULL_PARAM_DEREF_NONVIRTUAL','findbugs','Correctness','NP: Non-virtual method call passes null for non-null parameter'),('acf8b8cf-2076-4b84-9ec4-5c31b1e6106b','DB_DUPLICATE_BRANCHES','findbugs','Dodgy code','DB: Method uses the same code for two branches'),('ae0d9a9f-c6c8-410f-88b0-61ac66785244','ES_COMPARING_STRINGS_WITH_EQ','findbugs','Bad practice','ES: Comparison of String objects using == or !='),('ae29281b-8ecb-4a62-b92e-8f8f0572fa97','RCN_REDUNDANT_COMPARISON_OF_NULL_AND_NONNULL_VALUE','findbugs','Dodgy code','RCN: Redundant comparison of non-null value to null'),('ae8c620a-1ef0-4ea9-b276-bcb39b829f8f','RV_REM_OF_RANDOM_INT','findbugs','Dodgy code','RV: Remainder of 32-bit signed random integer'),('b27f8def-c7de-4758-b212-4dc8dbba4019','VA_FORMAT_STRING_USES_NEWLINE','findbugs','Bad practice','FS: Format string should use %n rather than \\n'),('b29843ad-239a-413e-abc0-f42e46af155c','UC_USELESS_CONDITION_TYPE','findbugs','Dodgy code','UC: Condition has no effect due to the variable type'),('b57b72e4-d569-430a-8002-7254ddbebcf2','NM_BAD_EQUAL','findbugs','Correctness','Nm: Class defines equal(Object); should it be equals(Object)?'),('b5878d72-1456-4b55-9718-196e02579ed4','VA_FORMAT_STRING_EXTRA_ARGUMENTS_PASSED','findbugs','Correctness','FS: More arguments are passed than are actually used in the format string'),('b5b4f592-fce3-4f06-9eef-a148fb732bce','DM_STRING_CTOR','findbugs','Performance','Dm: Method invokes inefficient new String(String) constructor'),('b7411090-57e3-48a2-87ba-1c2269a1d71a','RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE','findbugs','Dodgy code','RCN: Redundant nullcheck of value known to be non-null'),('b90b4271-599c-4bcd-8dd5-67d63da05ec6','CN_IDIOM','findbugs','Bad practice','CN: Class implements Cloneable but does not define or use clone method'),('ba05acd4-029e-4cb4-a90a-10ffbe551cb3','DM_INVALID_MIN_MAX','findbugs','Correctness','Dm: Incorrect combination of Math.max and Math.min'),('ba246290-e9b8-4e54-a7bd-1eb41975c023','EI_EXPOSE_STATIC_REP2','findbugs','Malicious code vulnerability','MS: May expose internal static state by storing a mutable object into a static field'),('ba9e03bb-160c-46cf-a113-9b0bb43403fc','DM_FP_NUMBER_CTOR','findbugs','Performance','Bx: Method invokes inefficient floating-point Number constructor; use static valueOf instead'),('bb380fe8-ce12-4aca-b352-855e8dc64c1a','DMI_USELESS_SUBSTRING','findbugs','Dodgy code','DMI: Invocation of substring(0), which returns the original value'),('bb51f993-1b5e-4af1-8895-27e0baa9157c','DM_STRING_VOID_CTOR','findbugs','Performance','Dm: Method invokes inefficient new String() constructor'),('bb5faa6f-cd92-43aa-8628-bdb2cb4192c3','SI_INSTANCE_BEFORE_FINALS_ASSIGNED','findbugs','Bad practice','SI: Static initializer creates instance before all static final fields assigned'),('bb702355-f4d2-43eb-9b6a-fa4c37226ca2','DM_BOOLEAN_CTOR','findbugs','Performance','Dm: Method invokes inefficient Boolean constructor; use Boolean.valueOf(...) instead'),('bc596010-adb6-44f1-bafa-42cf7bd3e413','NO_NOTIFY_NOT_NOTIFYALL','findbugs','Multithreaded correctness','No: Using notify() rather than notifyAll()'),('bcc66439-25ef-4226-b88b-5c3cce2e451c','DP_DO_INSIDE_DO_PRIVILEGED','findbugs','Malicious code vulnerability','DP: Method invoked that should be only be invoked inside a doPrivileged block'),('bd07e0cf-2df6-4ba5-802d-43aa68d76235','UWF_NULL_FIELD','findbugs','Correctness','UwF: Field only ever set to null'),('bd4d1f07-b4ba-4864-8e0c-8c9a262368c9','UR_UNINIT_READ_CALLED_FROM_SUPER_CONSTRUCTOR','findbugs','Correctness','UR: Uninitialized read of field method called from constructor of superclass'),('bd7593a1-3b50-4c9d-b619-e50aa4076f64','SE_BAD_FIELD_INNER_CLASS','findbugs','Bad practice','Se: Non-serializable class has a serializable inner class'),('be82a338-c71f-4e72-a8c2-06725db5b267','ES_COMPARING_PARAMETER_STRING_WITH_EQ','findbugs','Bad practice','ES: Comparison of String parameter using == or !='),('bec2c853-7fa9-485d-8b0a-2138978a966e','IC_SUPERCLASS_USES_SUBCLASS_DURING_INITIALIZATION','findbugs','Bad practice','IC: Superclass uses subclass during initialization'),('bef28c57-9085-44f0-be8f-2acd5d645ffb','ST_WRITE_TO_STATIC_FROM_INSTANCE_METHOD','findbugs','Dodgy code','ST: Write to static field from instance method'),('c03cb718-3861-49e2-98f8-c1e374cbe78f','NP_STORE_INTO_NONNULL_FIELD','findbugs','Correctness','NP: Store of null value into field annotated @Nonnull'),('c08bfc05-9e8a-41e5-8990-80a4955946cc','RCN_REDUNDANT_NULLCHECK_WOULD_HAVE_BEEN_A_NPE','findbugs','Correctness','RCN: Nullcheck of value previously dereferenced'),('c09237b8-0598-4dd1-b7af-15c347bf4948','UPM_UNCALLED_PRIVATE_METHOD','findbugs','Performance','UPM: Private method is never called'),('c1303de0-aab5-4cfb-9796-629681bc558d','NP_GUARANTEED_DEREF_ON_EXCEPTION_PATH','findbugs','Correctness','NP: Value is null and guaranteed to be dereferenced on exception path'),('c192f9e7-d364-4fa1-8971-a25651c4846b','ODR_OPEN_DATABASE_RESOURCE','findbugs','Bad practice','ODR: Method may fail to close database resource'),('c1ded351-650b-4780-b6ae-65d4b2086004','NM_FUTURE_KEYWORD_USED_AS_MEMBER_IDENTIFIER','findbugs','Bad practice','Nm: Use of identifier that is a keyword in later versions of Java'),('c26255d9-5592-4625-8046-41ecb389a3f5','NM_CLASS_NOT_EXCEPTION','findbugs','Bad practice','Nm: Class is not derived from an Exception, even though it is named as such'),('c2bf6ca5-bfaa-48c0-a5a1-d4a5a5fe9eaf','UWF_UNWRITTEN_FIELD','findbugs','Correctness','UwF: Unwritten field'),('c312b8c2-c22d-45ba-95b4-53f3ddabfeab','VO_VOLATILE_INCREMENT','findbugs','Multithreaded correctness','VO: An increment to a volatile field isn\'t atomic'),('c327358e-29db-43f6-ae2a-410719d9e457','BC_IMPOSSIBLE_DOWNCAST','findbugs','Correctness','BC: Impossible downcast'),('c387f6f0-347a-49f0-952f-daa4841f242c','NP_NONNULL_FIELD_NOT_INITIALIZED_IN_CONSTRUCTOR','findbugs','Correctness','NP: Non-null field is not initialized'),('c3d4dfd6-f174-4b88-ac55-b9fa6f19e4e8','UG_SYNC_SET_UNSYNC_GET','findbugs','Multithreaded correctness','UG: Unsynchronized get method, synchronized set method'),('c45b3ee7-9850-45e4-b2f5-adc3aa392107','OBL_UNSATISFIED_OBLIGATION_EXCEPTION_EDGE','findbugs','Experimental','OBL: Method may fail to clean up stream or resource on checked exception'),('c4bf7a91-1936-4fda-94d5-88d92de0babb','MS_CANNOT_BE_FINAL','findbugs','Malicious code vulnerability','MS: Field isn\'t final and can\'t be protected from malicious code'),('c50861fc-ae00-4241-9cce-a55702e51bfa','CO_SELF_NO_OBJECT','findbugs','Bad practice','Co: Covariant compareTo() method defined'),('c5d49242-78eb-42c7-92a8-e5bd2770e003','SA_LOCAL_SELF_COMPARISON','findbugs','Correctness','SA: Self comparison of value with itself'),('c887d59f-f058-4611-8048-234ab749dc41','JML_JSR166_CALLING_WAIT_RATHER_THAN_AWAIT','findbugs','Multithreaded correctness','JLM: Using monitor style wait methods on util.concurrent abstraction'),('c8d54de7-776d-406e-a8a5-07a70baa4ef3','FE_FLOATING_POINT_EQUALITY','findbugs','Dodgy code','FE: Test for floating point equality'),('c91daeac-0f45-4c93-93ec-fa46cf4a60fe','DM_MONITOR_WAIT_ON_CONDITION','findbugs','Multithreaded correctness','Dm: Monitor wait() called on Condition'),('c9a1fae6-c0da-46f8-9f5b-72d27d0c22eb','HE_HASHCODE_NO_EQUALS','findbugs','Bad practice','HE: Class defines hashCode() but not equals()'),('ca9c911a-1169-473b-a989-1bdb55bc9556','NM_CONFUSING','findbugs','Bad practice','Nm: Confusing method names'),('cb8a1965-aa7d-4bb0-bbb0-9022de7548e7','IL_INFINITE_LOOP','findbugs','Correctness','IL: An apparent infinite loop'),('cc562744-216d-411f-9ca0-0fad2bce48df','SA_LOCAL_SELF_COMPUTATION','findbugs','Correctness','SA: Nonsensical self computation involving a variable (e.g., x & x)'),('cd96fe92-059e-4149-ae92-12112f0ac480','BC_EQUALS_METHOD_SHOULD_WORK_FOR_ALL_OBJECTS','findbugs','Bad practice','BC: Equals method should not assume anything about the type of its argument'),('ce5fc659-e06c-4222-a901-967bcc1b9931','HE_EQUALS_NO_HASHCODE','findbugs','Bad practice','HE: Class defines equals() but not hashCode()'),('cedab598-6a7f-4912-9f3a-b9ff82beab73','ICAST_BAD_SHIFT_AMOUNT','findbugs','Correctness','BSHIFT: 32 bit int shifted by an amount not in the range -31..31'),('cedfb609-d598-4694-9097-231a4671a5db','BOA_BADLY_OVERRIDDEN_ADAPTER','findbugs','Correctness','BOA: Class overrides a method implemented in super class Adapter wrongly'),('ceff1499-152c-4cc2-aeba-12274c0e5a8a','DMI_COLLECTION_OF_URLS','findbugs','Performance','Dm: Maps and sets of URLs can be performance hogs'),('cf0617ef-5a43-4626-8927-a4cb300fdb0d','DC_DOUBLECHECK','findbugs','Multithreaded correctness','DC: Possible double check of field'),('cf10c794-23e1-4515-8f12-5da7e7c3981c','IJU_ASSERT_METHOD_INVOKED_FROM_RUN_METHOD','findbugs','Correctness','IJU: JUnit assertion in run method will not be noticed by JUnit'),('d053c4c2-b58a-465e-8702-b181fd050608','UUF_UNUSED_FIELD','findbugs','Performance','UuF: Unused field'),('d1434290-7831-4fa1-b4b7-a6f81f898d13','FE_TEST_IF_EQUAL_TO_NOT_A_NUMBER','findbugs','Correctness','FE: Doomed test for equality to NaN'),('d1923fce-2d66-4408-afb0-b7c9a840c128','BC_IMPOSSIBLE_CAST','findbugs','Correctness','BC: Impossible cast'),('d1b5a344-b0a4-4c57-9523-ed7b3c15b96e','FI_FINALIZER_NULLS_FIELDS','findbugs','Bad practice','FI: Finalizer nulls fields'),('d1bd9892-801c-45be-8489-f7df3ef568d0','HRS_REQUEST_PARAMETER_TO_HTTP_HEADER','findbugs','Security','HRS: HTTP Response splitting vulnerability'),('d2c28ea4-e58c-4418-bdaf-65128779b524','RANGE_ARRAY_INDEX','findbugs','Correctness','RANGE: Array index is out of bounds'),('d2fad61c-420b-49cb-aa05-96907befcbc8','DB_DUPLICATE_SWITCH_CLAUSES','findbugs','Dodgy code','DB: Method uses the same code for two switch clauses'),('d595753c-d191-4c96-ab0e-c890018d68f6','SA_FIELD_SELF_COMPUTATION','findbugs','Correctness','SA: Nonsensical self computation involving a field (e.g., x & x)'),('d5eece10-3ca2-4684-8d96-036623b0e655','RV_EXCEPTION_NOT_THROWN','findbugs','Correctness','RV: Exception created and dropped rather than thrown'),('d6014b8e-b0f2-4100-b550-15b8859cb42c','ESync_EMPTY_SYNC','findbugs','Multithreaded correctness','ESync: Empty synchronized block'),('d638fd73-b7ba-4e87-80ca-9bb14b7f83e4','IMSE_DONT_CATCH_IMSE','findbugs','Bad practice','IMSE: Dubious catching of IllegalMonitorStateException'),('d6544974-1057-4a16-a7a4-8bb94b7cd374','STI_INTERRUPTED_ON_UNKNOWNTHREAD','findbugs','Correctness','STI: Static Thread.interrupted() method invoked on thread instance'),('d75ac8d0-5d24-4bc2-983c-cd512e9008c3','RpC_REPEATED_CONDITIONAL_TEST','findbugs','Correctness','RpC: Repeated conditional tests'),('d764b434-7d17-40a7-91c2-86263832a440','NM_CLASS_NAMING_CONVENTION','findbugs','Bad practice','Nm: Class names should start with an upper case letter'),('d887a2f5-33e2-4e67-9b76-0ca6da304446','DMI_VACUOUS_CALL_TO_EASYMOCK_METHOD','findbugs','Correctness','Dm: Useless/vacuous call to EasyMock method'),('d8a6f1d7-f45f-483f-b964-49e577d1f10f','UL_UNRELEASED_LOCK','findbugs','Multithreaded correctness','UL: Method does not release lock on all paths'),('d8f0fb91-4061-4799-a2af-69b8c2cf7ab6','ICAST_INT_2_LONG_AS_INSTANT','findbugs','Correctness','ICAST: int value converted to long and used as absolute time'),('d9165fca-29d2-4443-9e3b-78c21c6062ae','DM_BOXED_PRIMITIVE_FOR_PARSING','findbugs','Performance','Bx: Boxing/unboxing to parse a primitive'),('d9c7a67a-6052-4c85-a218-d67274e76563','TQ_MAYBE_SOURCE_VALUE_REACHES_ALWAYS_SINK','findbugs','Correctness','TQ: Value that might not carry a type qualifier is always used in a way requires that type qualifier'),('d9cebc8d-a2b6-4f01-80ed-ef7a09f6dd3f','PZLA_PREFER_ZERO_LENGTH_ARRAYS','findbugs','Dodgy code','PZLA: Consider returning a zero length array rather than null'),('d9d2cf46-2518-492e-b00f-a8fa441eac63','RV_ABSOLUTE_VALUE_OF_HASHCODE','findbugs','Correctness','RV: Bad attempt to compute absolute value of signed 32-bit hashcode '),('da40100a-34a5-4651-83f3-b02624337205','EQ_CHECK_FOR_OPERAND_NOT_COMPATIBLE_WITH_THIS','findbugs','Bad practice','Eq: Equals checks for incompatible operand'),('db0a413e-e1e7-4e03-bec5-4e0f088ba565','SE_TRANSIENT_FIELD_NOT_RESTORED','findbugs','Bad practice','Se: Transient field that isn\'t set by deserialization. '),('db5cb349-c586-41e0-8331-6907c6b12d7e','IJU_SETUP_NO_SUPER','findbugs','Correctness','IJU: TestCase defines setUp that doesn\'t call super.setUp()'),('dc609844-1aad-458b-8d17-b27228d22cd2','DLS_DEAD_LOCAL_INCREMENT_IN_RETURN','findbugs','Correctness','DLS: Useless increment in return statement'),('dd330c72-e4a5-4a3e-864b-82fd998cd261','INT_BAD_COMPARISON_WITH_INT_VALUE','findbugs','Correctness','INT: Bad comparison of int value with long constant'),('dd39b5a1-c8ff-462d-be13-6d5fa065f06a','IA_AMBIGUOUS_INVOCATION_OF_INHERITED_OR_OUTER_METHOD','findbugs','Dodgy code','IA: Potentially ambiguous invocation of either an inherited or outer method'),('dd44e47d-a421-49e9-964f-89683fb25a13','DMI_NONSERIALIZABLE_OBJECT_WRITTEN','findbugs','Dodgy code','DMI: Non serializable object written to ObjectOutput'),('de4016bc-a0b7-4bd8-9034-e66d5fd341f3','HE_EQUALS_USE_HASHCODE','findbugs','Bad practice','HE: Class defines equals() and uses Object.hashCode()'),('de4da987-ed6d-4ab0-9408-3db757c0b443','NM_WRONG_PACKAGE','findbugs','Correctness','Nm: Method doesn\'t override method in superclass due to wrong package for parameter'),('df387fb5-273e-4e74-bc3b-493155154d0c','SIC_INNER_SHOULD_BE_STATIC','findbugs','Performance','SIC: Should be a static inner class'),('df58f597-df08-4b82-8523-52a47c04bc5e','SF_DEAD_STORE_DUE_TO_SWITCH_FALLTHROUGH_TO_THROW','findbugs','Correctness','SF: Dead store due to switch statement fall through to throw'),('e0d1c159-0aeb-4881-8dde-11026b087672','RANGE_STRING_INDEX','findbugs','Correctness','RANGE: String index is out of bounds'),('e0d5e39b-d277-4795-905c-82acd48857ca','MS_MUTABLE_COLLECTION_PKGPROTECT','findbugs','Malicious code vulnerability','MS: Field is a mutable collection which should be package protected'),('e11913e4-967c-4b5e-9f53-e50c1787020a','MS_EXPOSE_REP','findbugs','Malicious code vulnerability','MS: Public static method may expose internal representation by returning array'),('e11d2812-f84c-4d89-b778-e1b68973e977','NP_NULL_PARAM_DEREF','findbugs','Correctness','NP: Method call passes null for non-null parameter'),('e2e86a7b-1166-4f76-97ce-9e08dccaf4cb','DMI_CONSTANT_DB_PASSWORD','findbugs','Security','Dm: Hardcoded constant database password'),('e2f1752c-1d32-4ac9-833d-ffaf8737b5aa','NP_ALWAYS_NULL_EXCEPTION','findbugs','Correctness','NP: Null pointer dereference in method on exception path'),('e2f28687-ac5c-43d9-893b-79883d63074c','STCAL_STATIC_SIMPLE_DATE_FORMAT_INSTANCE','findbugs','Multithreaded correctness','STCAL: Static DateFormat'),('e2ff1685-578e-4434-9fc4-7f0458be293c','TQ_NEVER_VALUE_USED_WHERE_ALWAYS_REQUIRED','findbugs','Correctness','TQ: Value annotated as never carrying a type qualifier used where value carrying that qualifier is required'),('e409e556-f6d5-4caf-a0b3-928dc38874a1','NS_NON_SHORT_CIRCUIT','findbugs','Dodgy code','NS: Questionable use of non-short-circuit logic'),('e4abde47-2185-4dd0-82e2-f25251983c09','MS_MUTABLE_HASHTABLE','findbugs','Malicious code vulnerability','MS: Field is a mutable Hashtable'),('e5727fb9-5e62-4f38-af8d-6eb20aa4b47c','IL_CONTAINER_ADDED_TO_ITSELF','findbugs','Correctness','IL: A collection is added to itself'),('e5d57bf0-1b5b-4d6d-8b60-02c2bc26f073','SP_SPIN_ON_FIELD','findbugs','Multithreaded correctness','SP: Method spins on field'),('e61ef554-f49f-41aa-a674-e42f0f55904d','GC_UNRELATED_TYPES','findbugs','Correctness','GC: No relationship between generic parameter and method argument'),('e733d5b4-d240-4138-b6d8-341d97141f92','SE_NONLONG_SERIALVERSIONID','findbugs','Bad practice','Se: serialVersionUID isn\'t long'),('e7c57ac4-161b-463d-bfa5-a15882727645','VA_FORMAT_STRING_ILLEGAL','findbugs','Correctness','FS: Illegal format string'),('e7c5fc44-c3d7-41af-b713-1f9fc2a98be6','ME_ENUM_FIELD_SETTER','findbugs','Bad practice','ME: Public enum method unconditionally sets its field'),('e83c7f58-04ec-4787-87d0-a8d8c8baa040','SQL_BAD_RESULTSET_ACCESS','findbugs','Correctness','SQL: Method attempts to access a result set field with index 0'),('e846799c-c26f-4da7-8c5c-10124e106856','RV_RETURN_VALUE_IGNORED','findbugs','Correctness','RV: Method ignores return value'),('e9922db9-a012-4491-84dc-09f02d109750','RV_CHECK_COMPARETO_FOR_SPECIFIC_RETURN_VALUE','findbugs','Correctness','RV: Code checks for specific values returned by compareTo'),('e9dae75d-0550-4247-914e-5698ffe60417','VA_FORMAT_STRING_BAD_CONVERSION_TO_BOOLEAN','findbugs','Dodgy code','FS: Non-Boolean argument formatted using %b format specifier'),('eaa5ff03-395f-4e88-b717-46c3cdcda4e7','NM_FUTURE_KEYWORD_USED_AS_IDENTIFIER','findbugs','Bad practice','Nm: Use of identifier that is a keyword in later versions of Java'),('eb4bea97-a2d5-44b3-ac8d-2bb851743461','DMI_EMPTY_DB_PASSWORD','findbugs','Security','Dm: Empty database password'),('ec7d2b4d-b0d3-4f32-90c9-c752dffcb5f5','MS_OOI_PKGPROTECT','findbugs','Malicious code vulnerability','MS: Field should be moved out of an interface and made package protected'),('ec96d99f-e788-4913-accd-bd906c69a14f','DC_PARTIALLY_CONSTRUCTED','findbugs','Multithreaded correctness','DC: Possible exposure of partially initialized object'),('ed1f5e4e-b924-4193-89a7-b9e0e6f53f83','NM_SAME_SIMPLE_NAME_AS_SUPERCLASS','findbugs','Bad practice','Nm: Class names shouldn\'t shadow simple name of superclass'),('ed62799a-12f1-40c0-8ba7-f27aaff8f819','OBL_UNSATISFIED_OBLIGATION','findbugs','Experimental','OBL: Method may fail to clean up stream or resource'),('ed68b8b7-1d37-4a55-bb0b-553ff956a540','SA_LOCAL_SELF_ASSIGNMENT_INSTEAD_OF_FIELD','findbugs','Correctness','SA: Self assignment of local rather than assignment to field'),('ed893bbc-94d4-4611-81e6-4161530d81cc','BIT_IOR_OF_SIGNED_BYTE','findbugs','Correctness','BIT: Bitwise OR of signed byte value'),('edd0f346-edd5-4806-a969-d95f05831415','DE_MIGHT_DROP','findbugs','Bad practice','DE: Method might drop exception'),('ef52403f-4913-44e2-9ac7-580512c4a9d1','INT_BAD_REM_BY_1','findbugs','Dodgy code','INT: Integer remainder modulo 1'),('f1d5b658-b567-4cb1-b458-87761b7bfa97','IS2_INCONSISTENT_SYNC','findbugs','Multithreaded correctness','IS: Inconsistent synchronization'),('f1e33fca-41db-4669-a48f-622853005448','NP_LOAD_OF_KNOWN_NULL_VALUE','findbugs','Dodgy code','NP: Load of known null value'),('f281c68c-11e4-4c51-945b-df0354b28f54','NP_EQUALS_SHOULD_HANDLE_NULL_ARGUMENT','findbugs','Bad practice','NP: equals() method does not check for null argument'),('f2efd291-d5db-4359-bd44-af0bdbc0e7a6','AT_OPERATION_SEQUENCE_ON_CONCURRENT_ABSTRACTION','findbugs','Multithreaded correctness','AT: Sequence of calls to concurrent abstraction may not be atomic'),('f4f4eb08-7f85-41ae-b0e8-c94214b3cb18','RE_BAD_SYNTAX_FOR_REGULAR_EXPRESSION','findbugs','Correctness','RE: Invalid syntax for regular expression'),('f5088cbe-ca7a-4fac-8e83-fa080c1a0a24','UR_UNINIT_READ','findbugs','Correctness','UR: Uninitialized read of field in constructor'),('f5b425f0-2793-4829-a4af-baac2a4a61a2','SA_LOCAL_SELF_ASSIGNMENT','findbugs','Dodgy code','SA: Self assignment of local variable'),('f6dac089-fbbe-48e2-91ff-cd17ad613455','NP_UNWRITTEN_PUBLIC_OR_PROTECTED_FIELD','findbugs','Dodgy code','NP: Read of unwritten public or protected field'),('f7b63b74-92c8-4e00-a3d9-e9ba7759b2bb','UMAC_UNCALLABLE_METHOD_OF_ANONYMOUS_CLASS','findbugs','Correctness','UMAC: Uncallable method defined in anonymous class'),('f82d8391-ad5d-43f3-93ad-72626b373c5c','INT_VACUOUS_COMPARISON','findbugs','Dodgy code','INT: Vacuous comparison of integer value'),('f94e4245-3192-4a2b-bf68-4be9fa34398d','MS_MUTABLE_ARRAY','findbugs','Malicious code vulnerability','MS: Field is a mutable array'),('f96ffd95-9dd8-4eec-9aa3-1d79f3432c79','TQ_EXPLICIT_UNKNOWN_SOURCE_VALUE_REACHES_ALWAYS_SINK','findbugs','Dodgy code','TQ: Value required to have type qualifier, but marked as unknown'),('f9af7334-f3ec-4a06-ba55-f57fc95544d0','NM_METHOD_NAMING_CONVENTION','findbugs','Bad practice','Nm: Method names should start with a lower case letter'),('f9e802d6-0bac-441f-aba4-bdd7570a7975','MF_METHOD_MASKS_FIELD','findbugs','Correctness','MF: Method defines a variable that obscures a field'),('fb36668a-bf89-40f6-a356-fd4ab43769cf','BX_UNBOXED_AND_COERCED_FOR_TERNARY_OPERATOR','findbugs','Performance','Bx: Primitive value is unboxed and coerced for ternary operator'),('fc34aed9-ac0c-4b6a-8d7b-f73f2949cc73','BIT_AND','findbugs','Correctness','BIT: Incompatible bit masks'),('fd3fd475-a963-4b61-9bbd-4f060d8fe973','DL_SYNCHRONIZATION_ON_BOOLEAN','findbugs','Multithreaded correctness','DL: Synchronization on Boolean'),('fdf190ea-3327-424b-b629-2e2aa4bd9e4e','DM_BOXED_PRIMITIVE_TOSTRING','findbugs','Performance','Bx: Method allocates a boxed primitive just to call toString'),('ff8c598d-3779-4108-ad3a-fc19604cee07','ISC_INSTANTIATE_STATIC_CLASS','findbugs','Bad practice','ISC: Needless instantiation of class that only supplies static methods');
/*!40000 ALTER TABLE `issueType` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2018-12-17 15:35:24
