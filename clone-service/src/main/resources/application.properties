
server.port=10000

#dataBase.ip=10.135.132.106
#server.ip=10.135.132.106
dataBase.ip=10.176.64.34
server.ip=10.176.34.85
defaultUserToken = ec15d79e36e14dd258cfff3d48b73d35

#mybatis配置
mybatis.type-aliases-package=cn.edu.fudan.cloneservice.domain
mybatis.mapperLocations=classpath:mapper/*.xml
#编码配置
spring.http.encoding.force=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
#JSON返回前端时的格式化
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8


#数据源配置
spring.datasource.name=mysql_druid
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://${dataBase.ip}:3306/issueTracker?characterEncoding=utf8&useSSL=false&allowMultiQueries=true&autoReconnect=true 
spring.datasource.username=root
spring.datasource.password=HxUR7gT1dLQwPDUwO0SR02gsJj4wxZHbadojloQt4xRPeSLL0FGgn4qwbwC2+/A3YRw3LgrduBjAbey/MJSqjQ==
public-key=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKG3KtWNiPBAzJQNaG/wnMZpb8gATF2Rr+E84udC2Db35eZEBmD57Hu/3+AHCKY1vw73oDLuve0+u4SKba4M21cCAwEAAQ==
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.filter.config.enabled=true
spring.datasource.druid.connection-properties=config.decrypt=true;config.decrypt.key=${public-key}

#redis配置
# Redis数据库索引(默认为0)
spring.redis.database=0
# Redis服务器
spring.redis.host=${server.ip}
# Redis端口
spring.redis.port=6379
# Redis密码
spring.redis.password=85redis

workHome=/home/fdse/user/issueTracker/
clone.home=/home/fdse/codeWisdom/service/clone/
binHome=${workHome}bin/
clone.workHome=${workHome}FSN/LargeScaleCodeClone/detect/
clone.resultFileHome=${clone.home}result/
clone.resultHome=C:\\Users\\86189\\Desktop\\clone\\IssueTracker-Master\\clone-service\\clone-service\\result
resultFileHome=${workHome}resultfile/
account.service.path=http://${server.ip}:8001
project.service.path=http://${server.ip}:8002
issue.service.path=http://${server.ip}:8005
commit.service.path=http://${server.ip}:8102/commit
repository.service.path=http://${server.ip}:8102/repository
code.service.path=http://${server.ip}:8102/code-service
code-tracker.service.path=http://${server.ip}:8016
sonar.service.path=http://${server.ip}:9000
measure.service.path=http://${server.ip}:8000/measure

# 连接池最大连接数（使用负值表示没有限制）
spring.redis.jedis.pool.max-active=1024
# 连接池中的最大空闲连接
spring.redis.jedis.pool.max-idle=8
# 连接池中的最小空闲连接
spring.redis.jedis.pool.min-idle=0
#redis配置结束
spring.redis.block-when-exhausted=true

# 连接池最大阻塞等待时间（使用负值表示没有限制）
jedis.pool.max-wait=10000

# 连接超时时间（毫秒）
redis.timeout=10000

#Redis锁最低超时时间，单位秒
redis.lock.expireNx=600

#执行scan操作的线程池配置
core.pool.size=10
max.pool.size=10
queue.capacity=20
keep.alive.seconds=60
thread.name.prefix=clone-scan-

#执行扫描时,项目的起始时间,单位:月
scan.start.time=12

#入库的clone片段最小行数
min.snippet.num=6
#度量锁支持的共享数
clone.measure.lock.size=2

logging.level.cn.edu.fudan.codetracker=error

# 85Cloudfdse1995
# mvn clean package -Dmaven.test.skip=true & scp target/clone-service-0.0.1-SNAPSHOT.jar fdse@10.176.34.85:/home/fdse/codeWisdom/service/clone/ & ssh fdse@10.176.34.85 "/home/fdse/codeWisdom/service/clone/cloneService.sh restart"

# scp clone-service-0.0.1-SNAPSHOT.jar appuser@10.135.132.106:~