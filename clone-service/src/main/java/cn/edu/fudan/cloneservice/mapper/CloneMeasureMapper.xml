<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.fudan.cloneservice.mapper.CloneMeasureMapper">
    <resultMap id="cloneMeasure" type="cn.edu.fudan.cloneservice.domain.CloneMeasure">
        <id property="uuid" column="uuid"/>
        <result property="repoId" column="repo_id"/>
        <result property="commitId" column="commit_id"/>
        <result property="newCloneLines" column="new_clone_lines"/>
        <result property="selfCloneLines" column="self_clone_lines"/>
        <result property="addLines" column="add_lines"/>
        <result property="cloneLines" column="clone_lines"/>
        <result property="commitTime" column="commit_time"/>
    </resultMap>

    <select id="getCloneMeasure" resultMap="cloneMeasure">
    select * from issueTracker.clone_measure where repo_id=#{repo_id} and commit_id=#{commit_id} limit 1
    </select>

    <select id="getCloneMeasureTest" resultMap="cloneMeasure">
    select * from issueTrackerTest.clone_measure where  repo_id=#{repo_id} and commit_id=#{commit_id} limit 1
    </select>

    <select id="getCloneMeasures" resultMap="cloneMeasure">
    select * from clone_measure where commit_id in (select distinct commit_id from clone_measure where repo_id=#{repo_id})
    </select>

    <select id="getCloneMeasuresByDeveloperAndDuration" resultMap="cloneMeasure">
    select uuid, repo_id, commit_id, new_clone_lines, self_clone_lines, add_lines, clone_lines, commit_time from clone_measure
    <where>
        <trim prefixOverrides="and">
            repo_id = #{repo_id}
            <if test="start != null and start != '' ">
                and <![CDATA[ commit_time >= #{start} ]]>
            </if>

            <if test="end != null and end != '' ">
                and <![CDATA[ commit_time <= #{end} ]]>
            </if>

            <if test="developer != null and developer != '' ">
                and commit_id in (select commit_id from commit_view where developer_unique_name = #{developer} and length(parent_commit) &lt; 50)
            </if>
        </trim>
    </where>
    </select>

    <insert id="insertCloneMeasure" parameterType="cn.edu.fudan.cloneservice.domain.CloneMeasure">
        insert into clone_measure
        (
        uuid,
        repo_id,
        commit_id,
        new_clone_lines,
        self_clone_lines,
        add_lines,
        clone_lines,
        commit_time
        )
        VALUES
        (
        #{uuid},
        #{repoId},
        #{commitId},
        #{newCloneLines},
        #{selfCloneLines},
        #{addLines},
        #{cloneLines},
        #{commitTime}
        )
    </insert>

    <delete id="deleteCloneMeasureByRepoId" parameterType="String">
        delete from clone_measure where repo_id=#{repo_id}
    </delete>

    <delete id="deleteCloneMeasureByRepoIdAndCommitId" parameterType="String">
        delete from clone_measure where repo_id=#{repo_id} and commit_id=#{commit_id}
    </delete>

    <select id="getMeasureCountByCommitId" parameterType="String" resultType="Integer">
        select count(uuid) from clone_measure where repo_id = #{repo_id} and commit_id = #{commit_id}
    </select>

    <select id="getLatestCloneLines" parameterType="List" resultMap="cloneMeasure">
        select uuid, repo_id, commit_id, new_clone_lines, self_clone_lines, add_lines, clone_lines, commit_time
        from clone_measure
        where repo_id in
        <foreach collection='repo_ids' item='repo_id' open='(' separator=',' close=')'>
            #{repo_id}
        </foreach>
        order by commit_time desc limit 1
    </select>

    <select id="getAllDeveloper" resultType="String">
        select distinct(developer)
        FROM issueTracker.commit_view
        <where>
            <trim prefixOverrides="and">
                repo_uuid = #{repositoryId}
                <if test="start != null and start != '' ">
                    and <![CDATA[ commit_time >= #{start} ]]>
                </if>

                <if test="end != null and end != '' ">
                    and <![CDATA[ commit_time <= #{end} ]]>
                </if>
            </trim>
        </where>
    </select>

    <select id="getProjectByAccountId" resultType="java.lang.Integer">
    SELECT project_id
    FROM issueTracker.account_project AS p
    WHERE p.account_uuid = #{account_uuid} AND p.account_role = 'LEADER'
    </select>
</mapper>

