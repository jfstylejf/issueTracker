<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.fudan.projectmanager.mapper.ProjectMapper">
    <resultMap id="project" type="Project">
        <id property="id" column="id"/>
        <result property="projectName" column="project_name"/>
        <result property="updateTime" column="update_time"/>
        <result property="createTime" column="create_time"/>
        <result property="importAccountUuid" column="import_account_uuid"/>
    </resultMap>


    <insert id="insertOneProject" parameterType="String">
        insert ignore into project
        (project_name,
         import_account_uuid)
        VALUES (#{projectName},
                #{accountUuid})
    </insert>

    <update id="updateProjectNameP" parameterType="String">
        update project
        <set>
            project_name = #{newProjectName},
            import_account_uuid =#{accountUuid}
        </set>
        where project_name = #{oldProjectName}

    </update>

    <select id="getProjectListP" resultMap="project">
        select project_name, id
        from project
    </select>

    <select id="getProjectListPByLifeStatus" resultMap="project">
        select project_name, id
        from project
        where life_status = #{lifeStatus}
    </select>

    <select id="getProjectByNameP" resultMap="project">
        select * from project
        <where>
            project_name = #{projectName}
        </where>
    </select>

    <select id="getProjectIdByNameP" resultType="Integer">
        select id from project
        <where>
            project_name = #{projectName}
        </where>
    </select>

    <delete id="deleteProjectByName" parameterType="String">
        delete from project
        <where>
            project_name = #{projectName} ;
        </where>
    </delete>

    <select id="getRepoByProjectName" resultType="String">
        select repo_uuid from sub_repository
        <where>
            project_name = #{projectName}
        </where>
    </select>

    <update id="updateLifeStatus" >
        update project
        <set>
            life_status = #{lifeStatus}
        </set>
        where project_name = #{projectName}

    </update>

    <select id="getProjectLifeStatus" resultType="Integer">
        select life_status from project
        <where>
            project_name = #{projectName}
        </where>
    </select>

</mapper>