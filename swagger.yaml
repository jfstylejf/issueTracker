swagger: "2.0"
info:
  description: ""
  version: "1.0.0"
  title: "issueTracker"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "pyu17@fudan.edu.cn"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"

tags:
- name: "account-service"
- name: "project-service"
- name: "scan-service"
- name: "unifying-service"
- name: "issue-service"
schemes:
- "http"
paths:
  /user:
    post:
      tags:
      - "account-service"
      summary: "Create user"
      description: "This can only be done by the logged in user."
      operationId: "createUser"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created user object"
        required: true
        schema:
          $ref: "#/definitions/User"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResponseBean"
  /user/login:
    get:
      tags:
      - "account-service"
      summary: "Logs user into the system"
      operationId: "login"
      produces:
      - "application/json"
      parameters:
      - name: "username"
        in: "query"
        description: "The user name for login"
        required: true
        type: "string"
      - name: "password"
        in: "query"
        description: "The password for login in clear text"
        required: true
        type: "string"
      responses:
        200:
          description : "succsssful login"
          schema:
            $ref: "#/definitions/ResponseBean"
        400:
          description: "failed"
          schema:
            $ref : "#/definitions/ResponseBean"
  /user/auth/{userToken}:
    get:
      tags:
      - "account-service"
      summary: "Logs user into the system"
      operationId: "auth"
      produces:
      - "application/json"
      parameters:
      - name: "userToken"
        in: "path"
        description: "token of user that needs to be fetched"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResponseBean"
        400:
          description: "Invalid ID supplied"
          schema:
            $ref: "#/definitions/ResponseBean"

  /project:
    post:
      tags:
      - "project-service"
      summary: "add a project"
      description: "This can only be done by logged in user"
      operationId: "addProject"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "project that user want to add"
        required: true
        schema:
          $ref: "#/definitions/Project"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/ResponseBean"
        400:
          description: "Invalid ID supplied"
          schema:
            $ref: "#/definitions/ResponseBean"





securityDefinitions:
  token:
    type: "apiKey"
    name: "token"
    in: "header"

definitions:
  User:
    type: "object"
    properties:
      uuid:
        type: "string"
      accountName:
        type: "string"
      password:
        type: "string"
      name:
        type: "string"
      email:
        type: "string"

  Project:
    type: "object"
    properties:
      url:
        type: "string"


  ResponseBean:
    type: "object"
    properties:
      code:
        type: "integer"
        format: "int32"
      msg:
        type: "string"
      data:
        type: "object"
externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"