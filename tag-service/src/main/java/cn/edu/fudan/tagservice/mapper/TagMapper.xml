<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.fudan.tagservice.mapper.TagMapper">

    <resultMap id="tag" type="Tag">
        <id property="uuid" column="uuid"/>
        <result property="name" column="name"/>
        <result property="scope" column="scope"/>
        <result property="color" column="color"/>
        <result property="icon" column="icon"/>
    </resultMap>

    <select id="getUuidByNameAndScope" parameterType="String" resultType="String">
        select uuid from tag where name=#{name} and scope=#{scope}
    </select>

    <insert id="addOneTag" parameterType="Tag">
        insert into tag
        (
        uuid,
        name,
        scope,
        color,
        icon
        )
        values
        (
        #{uuid},
        #{name},
        #{scope},
        #{color},
        #{icon}
        )
    </insert>

    <insert id="addOneTaggedItem" parameterType="String">
        insert into tagged
        (
        item_id,
        tag_id
        )
        values
        (
        #{item_id},
        #{tag_id}
        )
    </insert>

    <insert id="addMultiTaggedItem" parameterType="List">
        insert into tagged
        (
        item_id,
        tag_id
        )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.item_id},
            #{item.tag_id}
            )
        </foreach>
    </insert>

    <delete id="deleteOneTag" parameterType="String">
        delete from tag where uuid = #{tag_id}
    </delete>

    <delete id="deleteOneTagged" parameterType="String">
        delete from tagged where tag_id=#{tag_id} and item_id=#{item_id}
    </delete>

    <delete id="deleteTagByProjectId" parameterType="String">
        delete from tagged where item_id in (select uuid from issue where project_id=#{project_id})
    </delete>

    <delete id="deleteTaggeds" parameterType="List">
        delete from tagged
        where item_id in
        <foreach collection="list" separator="," open="(" close=")" item="item_id">
            #{item_id}
        </foreach>
    </delete>

    <update id="modifyOneTagged" parameterType="String">
        update tagged set tag_id=#{new_tag_id} where tag_id=#{old_tag_id} and item_id=#{item_id}
    </update>

    <update id="modifyMultiTaggedItem" parameterType="list">
        update tagged
        <trim prefix="set" suffixOverrides=",">
            <trim prefix="tag_id = case" suffix="end,">
                <foreach collection="list" item="item">
                    <if test="item.newTagId != null">
                        when item_id=#{item.itemId}  and tag_id = #{item.preTagId} then  #{item.newTagId}
                    </if>
                </foreach>
            </trim>
        </trim>
        <where>
            <foreach collection="list" separator="or" item="item">
                item_id = #{item.itemId} and tag_id = #{item.preTagId}
            </foreach>
        </where>
    </update>

    <update id="modifyOneTag" parameterType="String">
        update tag set name=#{name} where uuid=#{tag_id}
    </update>

    <select id="getTagsByItemId" parameterType="String" resultMap="tag">
        select * from tag where uuid in (select tag_id from tagged where item_id = #{item_id})
    </select>

    <select id="getItemIdsByTagIds" parameterType="List" resultType="String">
        select distinct(item_id)
        from tagged
        <if test="list != null">
            where tag_id in
            <foreach collection="list" separator="," open="(" close=")" item="tag_id">
                #{tag_id}
            </foreach>
        </if>
    </select>

    <select id="getAllDefaultTags" resultMap="tag">
        select * from tag order by name
    </select>

    <select id="hasBeenTagged" parameterType="String" resultType="Integer">
        select count(*) from tagged where tag_id = #{tag_id} and item_id = #{item_id}
    </select>


    <select id="getItemIdsAndCountByTagIdsAndRepoId"  resultType="java.util.WeakHashMap">
        select uuid as 'key' ,count(*) as 'value' from issue_tag
        <trim prefix="where" prefixOverrides="and | or">
            <if test="repo_id != null">
                and repo_id = #{repo_id}
            </if>
            <if test="list != null">
                and tag_id in
                <foreach collection="list" separator="," open="(" close=")" item="tag_id">
                    #{tag_id}
                </foreach>
            </if>
        </trim>
         group by uuid
    </select>

    <select id="getTagIdByItemIdAndScope"  parameterType="String" resultType="String">
        select tag_id from issue_tag
        <trim prefix="where" prefixOverrides="and | or">
            <if test="uuid != null">
                and uuid = #{uuid}
            </if>
            <if test="scope != null">
                and scope = #{scope}
            </if>
        </trim>
    </select>

    <select id="getTagsByCondition" parameterType="String" resultMap="tag">
        select * from tag
        <trim prefix="where" prefixOverrides="and | or">
            <if test="uuid != null">
                and uuid = #{uuid}
            </if>
            <if test="name != null">
                and name = #{name}
            </if>
            <if test="scope != null">
                and scope = #{scope}
            </if>
        </trim>

    </select>

</mapper>