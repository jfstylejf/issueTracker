#mybatis\u914D\u7F6E
mybatis.type-aliases-package=cn.edu.fudan.projectmanager.domain
mybatis.mapperLocations=classpath:mapper/*.xml
#\u7F16\u7801\u914D\u7F6E
spring.http.encoding.force=true
spring.http.encoding.charset=UTF-8
spring.http.encoding.enabled=true
#JSON\u8FD4\u56DE\u524D\u7AEF\u65F6\u7684\u683C\u5F0F\u5316
spring.jackson.date-format=yyyy-MM-dd HH:mm:ss
spring.jackson.time-zone=GMT+8


#\u6570\u636E\u6E90\u914D\u7F6E
spring.datasource.name=mysql_druid
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.url=jdbc:mysql://10.131.252.160:3306/issueTracker?&useSSL=false&allowMultiQueries=true&autoReconnect=true
spring.datasource.username=root
spring.datasource.password=HxUR7gT1dLQwPDUwO0SR02gsJj4wxZHbadojloQt4xRPeSLL0FGgn4qwbwC2+/A3YRw3LgrduBjAbey/MJSqjQ==
public-key=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAKG3KtWNiPBAzJQNaG/wnMZpb8gATF2Rr+E84udC2Db35eZEBmD57Hu/3+AHCKY1vw73oDLuve0+u4SKba4M21cCAwEAAQ==
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
spring.datasource.druid.filter.config.enabled=true
spring.datasource.druid.connection-properties=config.decrypt=true;config.decrypt.key=${public-key}
#redis\u914D\u7F6E
# Redis\u6570\u636E\u5E93\u7D22\u5F15(\u9ED8\u8BA4\u4E3A0)
spring.redis.database=0
# Redis\u670D\u52A1\u5668
spring.redis.host=10.141.221.85
# Redis\u7AEF\u53E3
spring.redis.port=6379
# Redis\u5BC6\u7801
spring.redis.password=85redis

#kafaka\u914D\u7F6E
#kafka\u670D\u52A1\u5668\u5730\u5740
spring.kafka.bootstrap-servers=10.141.221.85:9092
#kafaka\u6D88\u8D39\u8005\u914D\u7F6E
# earliest:\u5F53\u5404\u5206\u533A\u4E0B\u6709\u5DF2\u63D0\u4EA4\u7684offset\u65F6\uFF0C\u4ECE\u63D0\u4EA4\u7684offset\u5F00\u59CB\u6D88\u8D39\uFF1B\u65E0\u63D0\u4EA4\u7684offset\u65F6\uFF0C\u4ECE\u5934\u5F00\u59CB\u6D88\u8D39
# latest:\u5F53\u5404\u5206\u533A\u4E0B\u6709\u5DF2\u63D0\u4EA4\u7684offset\u65F6\uFF0C\u4ECE\u63D0\u4EA4\u7684offset\u5F00\u59CB\u6D88\u8D39\uFF1B\u65E0\u63D0\u4EA4\u7684offset\u65F6\uFF0C\u6D88\u8D39\u65B0\u4EA7\u751F\u7684\u8BE5\u5206\u533A\u4E0B\u7684\u6570\u636E
# none:topic\u5404\u5206\u533A\u90FD\u5B58\u5728\u5DF2\u63D0\u4EA4\u7684offset\u65F6\uFF0C\u4ECEoffset\u540E\u5F00\u59CB\u6D88\u8D39\uFF1B\u53EA\u8981\u6709\u4E00\u4E2A\u5206\u533A\u4E0D\u5B58\u5728\u5DF2\u63D0\u4EA4\u7684offset\uFF0C\u5219\u629B\u51FA\u5F02\u5E38
spring.kafka.consumer.auto-offset-reset=latest
#\u6BCF\u4E00\u4E2AConsumer\u90FD\u4F1A\u5C5E\u4E8E\u67D0\u4E2AGroup,\u901A\u5E38\u4E00\u4E2AGroup\u4E0B\u4F1A\u6709\u591A\u4E2AConsumer
spring.kafka.consumer.group-id=test
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#Kafka\u751F\u4EA7\u8005\u914D\u7F6E
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.acks=1

server.ip=10.141.221.85
account.service.path=http://${server.ip}:8001
bug.recommendation.service.path=http://${server.ip}:8999/bugRecommendation
project.service.path=http://${server.ip}:8002
scan.service.path=http://${server.ip}:8003
issue.service.path=http://${server.ip}:8005
tag.service.path=http://${server.ip}:8006
event.service.path=http://${server.ip}:8007
measure.service.path=http://${server.ip}:8008
repository.service.path=http://${server.ip}:8102/repository
codeTracker.service.path=http://${server.ip}:8016

#repo.url.pattern=http://200.31.147.77/[\\w-_\\.]+/[\\w-_\\.]+[/\\w-_\\.]{0,}
repo.url.pattern=http[\\w]*://[\\w\\.]*git[\\w]+.com(/[\\w-]+/[\\w-]+)[\\.\\w]*
#repo.url.patternGitlab=https://[\\w]+\\.gitlab.com/(/[\\w-]+/[\\w-]+)
github.api.path=https://api.github.com/repos
clone.result.pre.home=/home/fdse/user/issueTracker/saga-cpu/perFile/
