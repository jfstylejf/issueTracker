<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.fudan.scanservice.mapper.ScanMapper">


    <resultMap id="scan" type="Scan">
        <id property="uuid" column="uuid"/>
        <result property="name" column="name"/>
        <result property="start_time" column="start_time"/>
        <result property="end_time" column="end_time"/>
        <result property="status" column="status"/>
        <result property="result_summary" column="result_summary"/>
        <result property="project_id" column="project_id"/>
        <result property="commit_id" column="commit_id"/>
        <result property="commit_time" column="commit_time"/>
    </resultMap>

    <!-- never used -->
    <insert id="insertOneScan" parameterType="Scan">
        insert into scan
               (
                   uuid,
                   name,
                   start_time,
                   end_time,
                   status,
                   result_summary,
                   project_id,
                   commit_id
               )
        VALUES
              (
                   #{uuid},
                   #{name},
                   #{start_time},
                   #{end_time},
                   #{status},
                   #{result_summary},
                   #{project_id},
                   #{commit_id}
              )
    </insert>


    <delete id="deleteScanByProjectId" parameterType="String">
        delete from scan where project_id=#{projectId}
    </delete>

    <update id="updateOneScan" parameterType="Scan">
        UPDATE scan
        <set>
            <if test="end_time != null">end_time = #{end_time},</if>
            <if test="status != null">status = #{status},</if>
            <if test="result_summary != null">result_summary = #{result_summary},</if>
        </set>
        where uuid = #{uuid}
    </update>

    <select id="getLatestScannedCommitId" parameterType="String" resultType="String">
        select commit_id from scan where project_id = #{project_id} and  end_time = (select max(end_time) from scan where project_id = #{project_id});
    </select>

    <select id="getScanCountByCommitId" parameterType="String" resultType="Integer">
        select count(uuid) from scan where commit_id = #{commit_id}
    </select>

    <select id="getTillCommitDateByProjectId" parameterType="String" resultType="java.util.Date">
        select max(commit_time) from  scan where  project_id = #{projectId}
    </select>

    <select id="getScannedCommits" parameterType="String">
        select commit_id,commit_time from scan where project_id=#{projectId} order by commit_time
    </select>
</mapper>