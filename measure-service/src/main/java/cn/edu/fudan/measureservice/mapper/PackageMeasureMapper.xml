<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.fudan.measureservice.mapper.PackageMeasureMapper">

    <resultMap id="package" type="Package" >
        <id property="uuid" column="uuid"/>
        <result property="name" column="name"/>
        <result property="classes" column="classes"/>
        <result property="functions" column="functions"/>
        <result property="ncss" column="ncss"/>
        <result property="ccn" column="ccn"/>
        <result property="java_docs" column="java_docs"/>
        <result property="java_docs_lines" column="java_docs_lines"/>
        <result property="single_comment_lines" column="single_comment_lines"/>
        <result property="multi_comment_lines" column="multi_comment_lines"/>
        <result property="commit_id" column="commit_id"/>
        <result property="commit_time" column="commit_time"/>
        <result property="repo_id" column="repo_id"/>
    </resultMap>


    <insert id="insertPackageMeasureDataList" parameterType="list">
        insert into package_measure
             (
                uuid,
                name,
                classes,
                functions,
                ncss,
                ccn,
                java_docs,
                java_docs_lines,
                single_comment_lines,
                multi_comment_lines,
                commit_id,
                commit_time,
                repo_id
             )
        values
        <foreach collection="list" item="item" index="index" separator=",">
            (
                #{item.uuid},
                #{item.name},
                #{item.classes},
                #{item.functions},
                #{item.ncss},
                #{item.ccn},
                #{item.javaDocs},
                #{item.javaDocsLines},
                #{item.singleCommentLines},
                #{item.multiCommentLines},
                #{item.commit_id},
                #{item.commit_time},
                #{item.repo_id}
            )
        </foreach>
    </insert>

    <select id="samePackageMeasureExist" resultType="int">
        select count(*) from package_measure where commit_id = #{commit_id} and repo_id = #{repo_id} and name = #{name}
    </select>

    <select id="getModuleOfRepo" resultType="string">
        select distinct (name) from package_measure where repo_id = #{repo_id} order by name
    </select>

    <select id="getPackageMeasureByRepoIdNameAndPackageName" resultMap="package">
        select * from package_measure
        where repo_id = #{repo_id} and name = #{name} and commit_time &gt; #{since} and commit_time &lt; #{until}
        order by commit_time;
    </select>
</mapper>