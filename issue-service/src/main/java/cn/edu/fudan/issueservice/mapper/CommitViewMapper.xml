<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.fudan.issueservice.mapper.CommitViewMapper">

    <resultMap id="commit" type="cn.edu.fudan.issueservice.domain.dbo.Commit">
        <id property="commitId" column="commit_id"/>
        <result property="message" column="message"/>
        <result property="developer" column="developer"/>
        <result property="commitTime" column="commit_time"/>
        <result property="repoId" column="repo_uuid"/>
        <result property="developerEmail" column="developer_email"/>
    </resultMap>

    <select id="getCommits" parameterType="String" resultMap="commit">
        SELECT commit_id,message,developer,commit_time,repo_uuid,developer_email
        FROM commit_view
        <where>
            <trim prefixOverrides="and | or">
                <if test="repo_uuid != null  and repo_uuid !=''">
                    AND repo_uuid= #{repo_uuid}
                </if>
                <if test="start_commit_time != null  and start_commit_time !=''">
                    AND <![CDATA[ commit_time > #{start_commit_time} ]]>
                </if>
            </trim>
        </where>
        ORDER BY commit_time DESC
    </select>

    <select id="getCommitViewInfoByCommitId" parameterType="String" resultType="java.util.HashMap">
        SELECT uuid, commit_id, message, developer, commit_time, repo_uuid, developer_email, self_index, parent_commit,
        developer_unique_name
        FROM commit_view
        <trim prefix="where" prefixOverrides="and">
            <if test="repo_uuid != null and repo_uuid != '' ">
                AND repo_uuid = #{repo_uuid}
            </if>
            <if test="commit_id != null and commit_id != '' ">
                AND commit_id = #{commit_id}
            </if>
        </trim>
        Limit 1
    </select>

    <select id="getCommitByCommitId" resultMap="commit">
        SELECT commit_id, message, developer, commit_time, repo_uuid, developer_email
        FROM commit_view
        WHERE repo_uuid = #{repoUuid}
          AND commit_id = #{startCommit}
    </select>

    <select id="getCommitTimeByCommitId" resultType="String">
        SELECT commit_time
        FROM commit_view
        WHERE commit_id = #{commit}
          AND repo_uuid = #{repoUuid}
        LIMIT 1
    </select>

    <select id="getParentCommits" resultType="java.util.Map">
        SELECT DISTINCT commit_id, commit_time
        FROM commit_view
        WHERE repo_uuid = #{repoUuid}
          AND <![CDATA[ commit_view.commit_time <= #{commitTime}
        ]]>
    </select>

    <select id="getDeveloperByCommitId" resultType="String">
        SELECT developer_unique_name
        FROM commit_view
        WHERE commit_id = #{commitId}
        LIMIT 1
    </select>

    <select id="getRepoCountByDeveloper" resultType="java.util.Map">
        SELECT developer_unique_name, group_concat(DISTINCT repo_uuid) FROM commit_view
        <trim prefix="where" prefixOverrides="and">
            <if test="repoUuids != null and repoUuids.size > 0">
                AND repo_uuid IN
                <foreach collection="repoUuids" separator="," open="(" close=")" item="repoUuid">
                    #{repoUuid}
                </foreach>
            </if>
            <if test="since != null and since != '' ">
                AND <![CDATA[ commit_time >= #{since} ]]>
            </if>
            <if test="until != null and until != '' ">
                AND <![CDATA[ commit_time <= #{until} ]]>
            </if>
            <if test="developers != null and developers.size > 0">
                AND developer_unique_name IN
                <foreach collection="developers" separator="," open="(" close=")" item="developer">
                    #{developer}
                </foreach>
            </if>
        </trim>
        GROUP BY developer_unique_name
    </select>
</mapper>
