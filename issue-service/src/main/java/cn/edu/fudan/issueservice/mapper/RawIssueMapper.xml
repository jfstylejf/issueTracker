<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.fudan.issueservice.mapper.RawIssueMapper">

    <resultMap id="rawIssue" type="cn.edu.fudan.issueservice.domain.dbo.RawIssue">
        <id property="uuid" column="uuid"/>
        <result property="type" column="type"/>
        <result property="tool" column="tool"/>
        <result property="detail" column="detail"/>
        <result property="fileName" column="file_name"/>
        <result property="scanId" column="scan_uuid"/>
        <result property="issueId" column="issue_uuid"/>
        <result property="commitId" column="commit_id"/>
        <result property="repoId" column="repo_uuid"/>
        <result property="codeLines" column="code_lines"/>
        <result property="commitTime" column="commit_time"/>
        <result property="developerEmail" column="developer_email"/>
        <result property="status" column="status"/>
        <collection property="locations" column="uuid"
                    select="cn.edu.fudan.issueservice.mapper.LocationMapper.getLocations"/>
    </resultMap>

    <resultMap id="rawIssue2" type="cn.edu.fudan.issueservice.domain.dbo.RawIssue">
        <id property="uuid" column="uuid"/>
        <result property="type" column="type"/>
        <result property="tool" column="tool"/>
        <result property="detail" column="detail"/>
        <result property="fileName" column="file_name"/>
        <result property="scanId" column="scan_uuid"/>
        <result property="issueId" column="issue_uuid"/>
        <result property="commitId" column="commit_id"/>
        <result property="repoId" column="repo_uuid"/>
        <result property="codeLines" column="code_lines"/>
        <collection property="locations" column="uuid"
                    select="cn.edu.fudan.issueservice.mapper.LocationMapper.getLocations"/>
    </resultMap>

    <resultMap id="rawIssue3" type="cn.edu.fudan.issueservice.domain.dbo.RawIssue">
        <id property="uuid" column="uuid"/>
        <result property="type" column="type"/>
        <result property="tool" column="tool"/>
        <result property="detail" column="detail"/>
        <result property="fileName" column="file_name"/>
        <result property="scanId" column="scan_uuid"/>
        <result property="issueId" column="issue_uuid"/>
        <result property="commitId" column="commit_id"/>
        <result property="repoId" column="repo_uuid"/>
        <result property="codeLines" column="code_lines"/>
    </resultMap>

    <resultMap id="rawIssueForScan" type="cn.edu.fudan.issueservice.domain.dbo.RawIssue">
        <id property="uuid" column="uuid"/>
        <result property="type" column="type"/>
        <result property="tool" column="tool"/>
        <result property="detail" column="detail"/>
        <result property="fileName" column="file_name"/>
        <result property="scanId" column="scan_uuid"/>
        <result property="issueId" column="issue_uuid"/>
        <result property="commitId" column="commit_id"/>
        <result property="repoId" column="repo_uuid"/>
        <result property="codeLines" column="code_lines"/>
        <result property="commitTime" column="commit_time"/>
        <result property="developerEmail" column="developer_email"/>
        <result property="version" column="version"/>
    </resultMap>


    <insert id="insertRawIssueList" parameterType="List">
        insert into raw_issue
        (
        uuid,
        type,
        tool,
        detail,
        file_name,
        repo_uuid,
        commit_id,
        code_lines,
        scan_uuid,
        issue_uuid,
        developer,
        version
        )
        VALUES
        <foreach collection="list" item="item" index="index" separator=",">
            (
            #{item.uuid},
            #{item.type},
            #{item.tool},
            #{item.detail},
            #{item.fileName},
            #{item.repoId},
            #{item.commitId},
            #{item.codeLines},
            #{item.scanId},
            #{item.issueId},
            #{item.developerName},
            #{item.version}
            )
        </foreach>
    </insert>

    <delete id="deleteRawIssueByIds">
        delete from raw_issue
        <where>
            uuid in
            <foreach collection="list" separator="," open="(" close=")" item="rawIssueId">
                #{rawIssueId}
            </foreach>
        </where>
    </delete>

    <select id="getNumberOfRawIssuesByIssueId" resultType="Integer">
        select count(*)
        from raw_issue
        where issue_uuid = #{issueId};
    </select>

    <select id="getRawIssueByRepoIdAndTool" resultType="String">
        SELECT uuid FROM raw_issue
        <where>
            repo_uuid = #{repo_uuid}
            <if test="tool != null  and tool != ''">
                AND tool = #{tool}
            </if>
        </where>
    </select>

    <select id="getCommitByRawIssueUuid" parameterType="String" resultType="String">
        SELECT commit_id
        from raw_issue
        where uuid = #{rawIssueUuid}
    </select>

    <select id="getLastVersionRawIssue" resultMap="rawIssueForScan">
        SELECT uuid, type, tool, detail, file_name, repo_uuid, commit_id, code_lines, scan_uuid,
        issue_uuid, developer, version
        FROM raw_issue
        WHERE issue_uuid = #{issueUuid}
        ORDER BY version DESC LIMIT 1
    </select>

    <select id="getRawIssueByUuids" resultType="java.util.Map">
        SELECT a.uuid,
        a.file_name AS fileName,
        a.commit_id AS commitId,
        a.repo_uuid AS repoUuid,
        b.commit_time AS commitTime
        FROM raw_issue AS a
        INNER JOIN commit AS b
        ON a.commit_id = b.commit_id
        WHERE a.uuid IN
        <foreach collection="uuids" separator="," open="(" close=")" item="uuid">
            #{uuid}
        </foreach>
    </select>

    <select id="getLatestVersionRawIssueUuids" resultType="String">
        SELECT uuid FROM raw_issue
        WHERE issue_uuid IN
        <foreach collection="issueUuids" separator="," open="(" close=")" item="issueUuid">
            #{issueUuid}
        </foreach>
        GROUP BY issue_uuid
        HAVING MAX(version)
    </select>
</mapper>